[
  {
    "tags": [
      "cisco",
      "first-step-to-switch"
    ],
    "description": "Cisco switch cihazlarına yapılandırmaya başlamak için switch ve IOS'u tanıyalım.",
    "title": "Cisco Switch'e ilk Adım",
    "content": "Tüm ağ cihazlarının her birinde birer işletim sistemi olmak zorundadır. Cisco Switch cihazlarında ise IOS işletim sistemi vardır. (Apple IOS ile karıştırmayın :-))\n\nBu makalemizde ise bu temel kullanım için bu IOS işletim sistemini nasıl configüre edebiliriz onu anlatacağım.\n\nÖncelikle Cisco Swicth cihazlarında herhangi bir GUI yok bu nedenle çoğu kişinin sevmediği ama biz network ve siber güvenlik ile uğraşan kişilerin sevdiği ve çokça aşina olduğu CLI ekranını kullanacağız \n\n## IOS CLI'a İlk Adımlar\n\nCisco IOS yazılımı bir güvenlik özelliği olarak, yönetim erişimini aşağıdaki gibi iki komut moduna ayırır:\n\n<span style=\"color:green\">User EXEC Mode (Kullanıcı EXEC Modu)</span>\n\n- Bu mod sadece kısıtlı sayıda temel monitoring (izleme) komutlarına izin verir.\n- Genellikle <em>yalnızca görüntüleme modu</em veya <em>enable mode</em> olarak adlandırılır.\n- Cihaz yapılandırmasına herhangi bir değişiklik yapılmasına izil verilmez.\n- CLI'da <code>SwitchAdı></code> ile gösterilir. \n\n\n<span style=\"color:green\">Privileged EXEC Mode (Ayrıcalıklı Exec Modu)</span>\n\n- Bu modda iken kullanıcı herhangi bir izleme komutunu kullanabilir, cihaza ait yapılandırma ve yönetim komutlarını yürütebilir.\n- Global Config modu gibi daha yüksek yapılandırma modlarına sadece bu moddan giriş yapılabilir.\n- CLI'da <code>SwitchAdı#</code> ile gösterilir. \n\n## Global Yapılandırma Modu ve Alt Yapılandırma Modları\n\nCisco switchlerini yapılandırmak için kullanıcının global yapılandırma modu olarak adlandırılan, global config moduna girmesi gerekir.\n\nGlobal yapılandırma modunda, cihazın bir bütün olarak çalışmasını etkileyen CLI yapılandırma değişiklikleri yapılır. Global yapılandırma modu, <code>Switch(config)#</code> gibi cihaz adından sonra biten bir <em>(config)#</em> istemiyle tanımlanır.\n\nGlobal Config moduna, diğer belirli yapılandırma modlarından önce erişilir. Kullanıcı global Config modundan farklı alt yapılandırma modlarına girebilir. Bu modların her biri, switchin belirli bir bölümünün veya işlevinin yapılandırılması için kullanılır. Alt yapılandırma modlarına iki örnek aşağıdaki gibidir.\n\n- **Line Config Mode** ⇒ Konsol, SSH, Telnet veya AUX erişimini yapılandırmak için kullanılır.\n- **Interface Config Mode** ⇒ Switch portunu veya Router ağ arayüzünü yapılandırmak için kullanılır.\n\nCLI kullanırken hangi modda olduğumuzu o moda ait komut istemi aracılığı ile öğreniriz. Varsayılan olarak her komut istemi cihazın adı ile başlar, daha sonra ise hangi modda olduğunu belirten ifade yer alır. Örneğin;\n\n- Global Config Mode ⇒ <code>SwitchAdı(config)#</code>\n- Line Config Mode ⇒ <code>SwitchAdı(config-line)#</code>\n- Interface Config Mode ⇒ <code>SwitchAdı(config-if)#</code>\n\n## Switch Modları Arasında Gezinelim\n\nSwicth modlarına girip çıkmak için özel komutlar kullanılır. User EXEC modundan Privileged EXEC moduna geçmek için <code>enable</code>komutu kullanılır. Kullanıcı EXEC moduna geri dönmek için ise Privileged EXEC modundayken <code>disable</code> komutunu kullanılır.\n\nGlobal Config moduna girmek için Privileged EXEC modundayken <code>configure terminal</code> modunu kullanılır. Global Config moddan Privileged EXEC moduna geri dönmek için ie <code>exit</code> komutu kullanılır.\n\nBirçok farklı alt yapılandırma modu vardır. Örneğin, Line Config moduna girmek için <code>line</code> komutu ve ardından erişmek istediğiniz yönetim line türünü ve numarasını kullanılır. Alt yapılandırma modundan çıkmak ve global yapılandırma moduna dönmek için exit komutu kullanılır.\n\n```\nSwitch(config)# line console 0\nSwitch(config-line)# exit\nSwitch(config)#\n```\n\nHerhangi bir alt yapılandırma modundan, modlar hiyerarşisine göre bi üst moda geçmek için <code>exit</code> komutu dışında <code>end</code> komutu ve Ctrl+Z tuş kombinasyonu kullanılabilir.\n\nAyrıca bir alt yapılandırma modundan diğerine doğrudan da geçebiliriz. Bir arayüzü seçtikten sonra komut isteminin değiştiğine dikkat edelim\n\n```\nSwitch(config-line)# interface FastEthernet 0/1\nSwitch(config-if)#\n```\n\n### Swicth modlarını daha hızlı değiştirelim\n\nSürekli configüre terminal gibi uzun mod değiştirme komutlarını kullanmak bazen can sıkıcı olabilir. Aşağıda sık kullanılan mod değiştirme komutlarının kısaltılmış verisyonlarını görebilirsiniz.\n|Komut|Kısa hali\n|-|-|\n|enable|en|\n|configure terminal|conf t|\n|interface FastEthernet 0/1| int fa0/1|\n|...|...|\nİlerleyen makalelerde daha fazla komut göreceğiz merak etmeyin :)\n\n\n",
    "categories": [
      "network"
    ],
    "slug": "cisco-switch-e-ilk-adım",
    "ID": "1c86164b-7c68-4f8c-a9ab-c95ce427086b",
    "cover": "cover2.jpg",
    "date": "2022-06-08 12:00",
    "createdAt": 1654719373157,
    "updatedAt": 1654728512525
  },
  {
    "tags": [
      "cisco",
      "switch",
      "switch-config"
    ],
    "description": "Temel switch yapılandırmalarını yapalım.",
    "title": "Temel Switch Yapılandırması",
    "content": "## Switch Adını Değiştirelim\n\nBir switch yapılandırmaya başlarken ilk işimiz switch adını değiştirmek olmalıdır. Varsayılan olarak Cisco tarafından cihazlara <em>Switch</em> adı atanır. Sorun da tam olarak burada başlar. Bir ağda isim atanmamış tüm switchlerin adı aynı olduğunda uzaktan SSH ya da Telnet ile bağlanılan switchin hangi switch olduğunu anlamak karmaşık hale gelebilir.\n\nVarsayılan isim, daha açıklayıcı bir isimle değiştirilmelidir. İsimler akıllıca seçildiğinde, ağ cihazlarını hatırlamak, belgelemek ve tanımlamak daha kolay olacaktır. Hostlar için bazı önemli isimlendirme yönergeleri şunlardır:\n\n- Harf ile başlamalı\n- Boşluk içermemeli\n- Harf veya sayı ile bitmeli\n- Sadece harf, sayı ve tireler kullanılmalı\n- Uzunluğu 64 karakterden az olmalı\n\nAşağıda örnek bir switch adlandırması görmekteyiz. \n\n![örnek-switch-adlandırması](https://skorskyfiles.blob.core.windows.net/$web/articles/temel-switch-yapilandirmasi/ornek-adlandirma.png)\n\nİsimlendirmeler bu şekilde tanımlayıcı olduğu takdirde ilerleyen aşamalarda işimiz çok daha kolay hale gelecektir.\n\nBir switchin adını değiştirmek için global config modda iken <code>hostname</code> komutunun ardından verilmek istenen ismin girilmesi yeterlidir.\n\n```\nSwitch# configure terminal\nSwitch(config)# hostname Sw-Floor-1\nSw-Floor-1(config)#\n```\n\n## Switch Modlarını Şifreleyelim\nBir cihaza ilk defa bağlandığımızda User EXEC modundayız demektir. Örnekte gösterildiği gibi <code>line console 0</code> komutunu kullanarak konsol yapılandırma moduna geçiş yapıyoruz. 0 olarak bahsettiğimiz ilk ve genelde tek olan cihaz üzerindeki konsol girişini ifade eder. \n\nBu moda girdikten sonra <code>password</code> komutunu kullandıktan sonra vermek istediğimiz şifreyi girebiliriz. Son olarak <code>login</code> komutunu kullanarak User Exec modunu aktifleştirmemiz gerekiyor.\n\n```\nSw-Floor-1# configure terminal\nSw-Floor-1(config)# line console 0\nSw-Floor-1(config-line)# password skorskyblog\nSw-Floor-1(config-line)# login\nSw-Floor-1(config-line)# end\nSw-Floor-1#\n```\n\nArtık cihaz üzerinde bulunan konsol hattını şifreledik ancak cihaz üzerinde daha fazla yetkiye sahip olduğumuz Privileged modu da şifrelememiz güvenlik açısından elzem bir durumdur. Şimdi sıra privileged modda;\n\nPrivileged moda geçtikten sonra <code>enable secret</code> komutunun ardından istediğimiz şifreyi girebiliriz. \n```\nSw-Floor-1# configure terminal\nSw-Floor-1(config)# enable secret skorsky\nSw-Floor-1(config)# exit\nSw-Floor-1#\n```\n\nHenüz işimiz bitmedi şimdi sıra Cisco Switchlerde bulunan SSH ve Telnet gibi uzaktan bağlantı yapmamıza olanak sunan sanal vty hatlarını şirelemekte. Çoğu Cisco cihazında 0-15 aralığında numaralandırılmış 16 adet sanal vty hattı yer alır.\n\nBu sanal hatları şifrelemek için global config modda iken <code>line vty 0 15</code> komutunu kullanarak vty config moda geçiş yapıyoruz. Daha sonra <code>password</code> komutunun ardından istediğimiz şifreyi verebiliriz. Hemen ardından <code>login</code>\nkomutunu kullanarak vty erişimini etkinleştiriyoruz.\n\n```\nSw-Floor-1# configure terminal\nSw-Floor-1(config)# line vty 0 15\nSw-Floor-1(config-line)# password skorsky-line\nSw-Floor-1(config-line)# login \nSw-Floor-1(config-line)# end\nSw-Floor-1#\n```\n\nBuraya kadar her şey çok güzel ancak cihaz üzerinde çalışan yapılandırma dosyasında varsayılan olarak verilen parolalar açık olarak yer almaktadır bu da üst düzey bir güvenlik açığı yaratmaktadır. Aşağıda encrypte edilmemiş yapılandırma dosyasını görmektesiniz. \n![şifresiz config](https://skorskyfiles.blob.core.windows.net/$web/articles/temel-switch-yapilandirmasi/sifresiz-config.png)\n\nGörüldüğü üzere girilen tüm parolalar açıkça görülebilir halde şimdi bu parolaları encrypte edelim.\n\nGlobal config moda girdikten sonra <code>service password-encryption</code> komutunu girdiğimiz zaman cihazda yer alan parolalar artık encrypte edilmiş hale gelir.\n\n```\nSw-Floor-1# configure terminal\nSw-Floor-1(config)# service password-encryption\nSw-Floor-1(config)#\n```\n\nCihazda çalışan yapılandırmayı görmek için <code>show running-config</code> ya da daha kısa hali olan <code>sh run</code> komutunu girdikten sonra enter tuşu ile biraz alt satırlara indiğimizde aşağıdaki gibi bir ekran ile karşılaşacağız. \n```\nSw-Floor-1(config)# end\nSw-Floor-1# show running-config\n```\n![encrypte password](https://skorskyfiles.blob.core.windows.net/$web/articles/temel-switch-yapilandirmasi/sifreli-config.png)\n\nArtık şifrelerde encrypte olmuş halde. Durmak yok ilerlemeye devam. \n\n## Banner Mesajları Gösterelim\n![banner](https://skorskyfiles.blob.core.windows.net/$web/articles/temel-switch-yapilandirmasi/banner.png)\n\nCisco cihazına ilk eriştiğimizde yukarıdaki gibi bir banner mesajı verseydik güzel olmaz mıydı? Evet ben de aynı şekilde düşündüm. Hadi bir banner mesajı verelim.\n\nÖncelikle global config moda geçtikten sonra <code>banner motd</code> komutundan sonra banner mesajı içerisinde yer almayacak özel bir karakteri ayraç olarak kullanarak mesajımızı giriyoruz. Daha anlaşılır olması için örnek verelim.\n```\nSw-Floor-1# configure terminal\nSw-Floor-1(config)# banner motd !Authorized Access Only!\n```\n\n## Yapılandırmayı Kaydedelim\nSwitch üzerinde çeşitli değişiklikler yaptık çok güzel, fakat elektrik bağlantısı kesilirse ya da switch kapatılıp açılırsa ayarlar olduğu gibi korunacak mı? Hayır... Düzenlediğimiz ayarların geçici değil sürekli olmasını sağlamak için yapılandırma dosyasını Switch üzerinde bulunun NV-Ram'e kaydetmek gerekir. Hadi gelin bunu yapalım. \n\nPrivileged moda geçtikten sonra <code>copy running-config startup-config</code> komutunu kullanırız. Burada geçen iki argümanı açıklamak gerekirse;\n\n- running-config ⇒ Rastgele Erişimli Bellekte (RAM) saklanır. Geçerli yapılandırmayı yansıtır. Çalışan bir yapılandırma değiştirildiğinde Cisco cihazının çalışması derhal etkilenir. RAM uçucu hafızadır. Cihaz kapatıldığında veya yeniden başlatıldığında tüm içeriğini kaybeder. \n- startup-config . ⇒  NVRAM'de depolanan kaydedilmiş yapılandırma dosyasıdır. Cihazın açılışta veya yeniden başlatma sırasında kullanacağı tüm komutları içerir. Flash, cihaz kapatıldığında içeriğini kaybetmez.\n\n```\nSw-Floor-1# show running-config\n```\nSon olarak başlangıç yapılandırmasına istenmeyen değişikler kaydedildiyse yine privileged moda geçerek <code>erase startup-config</code> komutunu kullanarak NV-Ram'de yer alan yapılandırma dosyasını silebiliriz. Cihaz yeniden başladığında varsayılan yapılandırma dosyası ile birlikte tekrar açılacaktır. \n\nSonraki makalelerde görüşmek üzere hoşçakalın...\n",
    "categories": [
      "network"
    ],
    "slug": "temel-switch-yapilandirmasi",
    "ID": "6849cc65-360b-46ca-afa0-006f3ee0dd81",
    "cover": "cover1.jpg",
    "date": "2022-06-09 12:00",
    "createdAt": 1654728343247,
    "updatedAt": 1654900801500
  },
  {
    "tags": [
      "osi",
      "tcp/ip",
      "protocol"
    ],
    "ID": "4bfd6bc2-9bf5-458f-a384-5789e098f6db",
    "description": "Herkese merhabalar, bugün uzun soluklu bir seriye başlıyoruz. Ethernet prokolleri ve protokol paketleri nelerdir bunlara bakacağız. ",
    "title": "İnternet Protokol ve Modelleri",
    "categories": [
      "network"
    ],
    "content": "\n\nHerkese merhabalar, bugün uzun soluklu bir seriye başlıyoruz. İnternet protokolleri ve protokol paketleri nelerdir bunlara bakacağız. \n\n## Ağ Protokollerine Genel Bakış\nTıpkı insanların iletişiminde olduğu gibi bilgisayarlarda kendilerine özgü bir dil kullanır. Bizdeki dilin bilgisayarlardaki karşılığı protokol olarak adlandırılır ve her uç cihaz birbiriyle iletişim kurarken bu protokollere uymak zorundadır. \n\nAğ protokolleri, cihazlar arasında mesaj alışverişi için ortak bir biçim ve kurallar kümesi tanımlar. Protokoller, yazılım, donanım veya her ikisinde de uç cihazlar ve aracı cihazlar tarafından uygulanır. Her ağ protokolünün kendi işlevi, biçimi ve iletişim kuralları vardır.\n\nTabloda ağ üzerinde iletişim kurmak için gerekli protokoller listelenmiştir. Hadi onlara bakalım. \n\n|Protokol Türü|Açıklama  |\n|--|--|\n| Ağ İletişim Protokolleri | Ağ iletişim protkolleri, iki veya daha fazla cihazın bir veya daha fazla ağ üzerinden iletişim kurmasını sağlar. Ethernet teknolojileri ailesi IP, TCP, HTTP ve daha pek çok protokol içerir. |\n|Ağ Güvenlik Protokolleri|Ağ güvenlik protokolleri, kimlik doğrulama, veri bütünlüğü ve veri şifreleme sağlamak için verileri korur. Güvenli protokol örnekleri arasında SSH, SSL ve TLS bulunur.|\n|Yönlendirme Protokolleri|Yönlendirme protokolleri, yönlendiricilerin rota bilgilerini değiştirmesini, yol bilgilerini karşılaştırmasını ve ardından hedef ağa giden en iyi yolu seçmesini sağlar. seçmesini sağlar. Yönlendirme protokollerine örnek olarak Open Shortest Path First (OSPF) ve Border Gateway Protocol (BGP) verilebilir.|\n|Hizmet Bulma Protokolleri|Hizmet bulma protokolleri, cihazların veya hizmetlerin otomatik olarak algılanması için kullanılır. Hizmet bulma protokollerine örnek olarak IP adresi tahsisi için hizmetleri keşfeden DHCP ve isimden IP adresine çeviri gerçekleştirmek için kullanılan DNS verilebilir.|\n\n## Protokol Paketlerinin Gelişimi\nProtokol paketi, kapsamlı ağ iletişim hizmetleri sağlamak için birlikte çalışan bir dizi protokoldür. 1970'lerden bu yana, bazıları standart bir kuruluş tarafından geliştirilmiş, bazıları ise çeşitli satıcılar tarafından geliştirilmiş olan birkaç farklı protokol paketi bulunmaktadır.\n\nGünümüzde en çok bilinen iki protokol modeli OSI Referans Modeli ve TCP/IP Protokol Paketidir. \n\n## Katmanlı Model Kullanmanın Avantajları\n\nBir ağın nasıl çalıştığı gibi karmaşık kavramları açıklamak ve anlamak zor olabilir. Bu nedenle, bir ağın işlemlerini yönetilebilir katmanlara dönüştürmek için katmanlı bir model kullanılır.\n\nAğ protokollerini ve işlemlerini tanımlamak için katmanlı bir model kullanmanın faydaları şunlardır:\n\n- Belirli bir katmanda işleyen protokoller uyarınca davrandıkları tanımlı bilgilere  üst ve alt katmanlarla tanımlı bir arayüze sahip olduğu için protokol tasarımına yardımcı olmak\n- Farklı satıcıların ürünleri birlikte çalışabildiği için rekabeti teşvik etmek\n- Bir katmandaki teknoloji veya yetenek değişikliklerinin yukarıdaki ve altındaki diğer katmanları etkilemesini önlemek\n- Ağ işlevlerini ve yeteneklerini tanımlamak için ortak bir dil sağlamak\n\n![tcpip-osi](https://skorskyfiles.blob.core.windows.net/$web/articles/internet-protokol-ve-modelleri/tcp-%C4%B1p-vs-osi.png)\n\n## OSI Referans Modeli\n\nOSI modeli (Open System Interconnection) yedi katmandaki protokolleri uygulamak için bir bilgisayar ağ çerçevesi tanımlar. Ağ oluşturma terimlerindeki bir protokol, bir tür müzakere ve iki ağ kuruluşu arasında kuraldır. OSI modelini ISO International Organization for Standardization geliştirmiştir. Amaç aslında iki bilgisayar arasındaki iletişimin nasıl olacağını tanımlamaktan başka bir şey değildir.\n\nOSI öncesindeki dönemde, yalnızca bilgisayar donanımı üreten kuruluşlara özgü ağlar vardı. Bu ağların özellikleri, çoğunlukla yalnızca o üreticinin donanımının bağlanmasına izin verecek biçimde tanımlanmıştı. Onlardan ayrı olarak OSI, çeşitli üreticilerin ürünlerinin bağlanabileceği bir ağ için, bir sektör etkinliği olarak ortaya çıkmıştır. OSI Modeli herhangi bir donanım ya da bilgisayar ağı tipine göre değişiklik göstermemektedir. OSI’nin amacı ağ mimarilerinin ve protokollerinin bir ağ ürünü bileşeni gibi kullanılmasını sağlamaktır. OSI modeli 7 katmana ayrılmıştır.\nBu katmanları bir sonraki makalemizde daha ayrıntılı anlatacağım. \n\n## TCP/IP Protokol Paketi\nTCP ve IP birleşerek TCP/IP protokol ailesini oluşturmaktadır. Bu sayede bilgisayarlar arasında birden fazla iletişim metodu kullanılabilmektedir. Bu iletişim sırasında kullanılan TCP/IP katmanları ise aşağıdaki gibi belirtilmiştir.\n\n- **1.Katman – Application layer - Uygulama katmanı**\nUygulama katmanında, veri paketini göndermek isteyen uygulama ve kullandığı dosya biçimi tespit edilerek gönderilen veri paketinin türüne göre farklı protokoller devreye girer (HTTP, SMTP, FTP, Telnet, vs.) ve programlarla Taşıma protokollerinin haberleşmesi sağlanır. Ardından görev artık Taşıma katmanındadır. Taşıma katmanıyla da iletişim portlar aracılığıyla gerçekleşir.\n- **2.Katman – Transport layer -Taşıma katmanı**\nTaşıma katmanı aslında uçtan uca iletişim ile ilgilenen katmandır. Yani verinin nasıl gönderileceği belirlenir. Ayrıca veri güvenliği ve hata kontrolü gibi işlemler bu katmanda yapılır. TCP ve UDP protokolleri bu katmanda çalışır. Taşıma katmanı, veri paketi gönderirken İnternet katmanı ile veri alırken de Uygulama katmanı ile iletişim halindedir.\n- **3.Katman – Internet layer - İnternet katmanı**\nBu katmanda verinin kaynaktan hedefe yönlendirilmesi sağlanır. Kaynak IP adresi bu katmanda veriye eklenir. Genel olarak bu katman ağdaki verilen paketlenmesinden, ele alınmasından ve yönlendirilmesinden sorumludur.\n- **4. Katman – Network layer - Ağ katmanı**\nAğ Erişim Katmanı, fiziksel ağa erişim sağlar yani gönderilen verilen son durağıdır. Verilerin fiziksel olarak 1 ve 0’lara dönüştürülerek taşınması sağlanır. Ethernet, FDDI, Token Ring, ATM, OC, HSSI ve hatta Wi-Fi, tüm ağ ara yüzlerine örnektir. Ethernet Ağ Arayüzü Katmanında kullanılan ve veri iletiminin fiziksel görünümünü sağlayan en yaygın kablolu yerel ağ teknolojisidir.\n\nGünümüzde, TCP/IP protokol paketi birçok protokol içerir ve yeni hizmetleri desteklemek için gelişmeye devam eder. Daha popüler olanlardan bazıları şekilde gösterilmiştir.\n\n![tcp-ıp-protokol-paketi](https://skorskyfiles.blob.core.windows.net/$web/articles/internet-protokol-ve-modelleri/tcp-%C4%B1p-protokol-paketi.png)\n\nYukarıda bahsedilen protokolleri her katman için biraz daha detaylı inceleyelim.\n\n###   Application Layer - Uygulama Katmanı\n\n**Name System**\n\n- **DNS - Domain Name System** \nskorskyblog.me gibi alan adlarını IP adreslerine çevirir.\n\n**Host Config - Host Yapılandırma**\n\n- **DHCPv4 - Dynamic Host Configuration Protocol v4** \n IPv4 için DHCPv4 sunucusu, başlangıçta DHCPv4 istemcilerine IPv4 adresleme bilgilerini dinamik olarak atar ve artık ihtiyaç duyulmadığında adreslerin yeniden kullanılmasına izin verir.\n \n-  **DHCPv6 - Dynamic Host Configuration Protocol V6** \nIPv6 için DHCPv6, DHCPv4'e benzer. DHCPv6 sunucusu, başlangıçta DHCPv6 istemcilerine IPv6 adresleme bilgilerini dinamik olarak atar.\n\n-   **SLAAC - StateLess Address Auto Configuration**  \nBir aygıtın DHCPv6 sunucusu kullanmadan IPv6 adresleme bilgilerini almasını sağlayan bir yöntem.\n\n**E-mail**\n\n-   **SMTP - Simple Mail Transfer Protocol**\nİstemcilerin bir posta sunucusuna ve sunucuların diğer sunuculara e-posta göndermesini sağlar.\n \n-   **POP3 - Post Office Protocol 3**\nİstemcilerin bir posta sunucusundan e-posta almasını ve e-postayı istemcinin yerel posta uygulamasına indirmesini sağlar.\n\n-   **IMAP - Internet Message Access Protocol**\nİstemcilerin, bir posta sunucusunda depolanan e-postalara erişebilmesinin yanı sıra sunucuda e-postaların korumasını da sağlar.\n\n**File Transfer - Dosya Transferi**\n\n-   **FTP - File Transfer Protocol** \nBir hosttaki kullanıcının başka bir hosttaki dosyalara ağ üzerinden erişmesini veya aktarmasını sağlayan kuralları belirler. FTP güvenilirdir, bağlantı odaklı ve onaylı bir dosya dağıtım protokolüdür.\n\n-   **SFTP - Secure File Transfer Protocol**\nSecure Shell (SSH) protokolünün bir uzantısı olarak SFTP, dosya aktarımının şifrelendiği güvenli bir dosya aktarım oturumu oluşturmak için kullanılabilir. SSH, genellikle bir cihazın komut satırına erişmek için kullanılan güvenli uzaktan oturum açma yöntemidir.\n\n-   **TFTP - Trivial File Transfer Protocol**\nEn iyi çaba gerektiren, onaylı olmayan dosya teslimi ile basit, bağlantısız bir dosya aktarım protokolü. FTP'den daha az ek yük kullanır.\n\n**Web and Web Service**\n\n-   **HTTP - Hyper-Text Transfer Protocol**\nWorld Wide Web'de metin, grafik görüntü, ses, video ve diğer multimedya dosyalarını alıp vermesini sağlayan bir dizi kurallar bütünüdür.\n\n-   **HTTPS** - World Wide Web üzerinden değiştirilen verileri şifreleyen güvenli bir HTTP formudur.\n\n-   **REST - Representational State Transfer**\nWeb uygulamaları oluşturmak için uygulama programlama arayüzlerini (API'ler) ve HTTP isteklerini kullanan bir web hizmetidir.\n\n###   Transport Layer - Taşıma Katmanı\n\n**Connection Oriented - Bağlantı Odaklı**\n\n- **TCP - Transmission Control Protocol**\nAyrı ana bilgisayarlarda çalışan süreçler arasında güvenilir iletişimi sağlar ve başarılı teslimatı doğrulayan güvenilir ve onaylı iletimler sağlar.\n\n**Connectionless - Bağlantısız**\n\n- **UDP - User Datagram Protocol**\nBir hostta çalışan bir işlemin, başka bir hostta çalışan bir işleme paket göndermesini sağlar. Ancak, UDP başarılı iletimini doğrulamaz.\n\n###   Internet Layer - İnternet Katmanı\n \n**Internet Protocol - Internet Protokolü**\n\n-   **IPv4**\nTaşıma katmanından ileti kesimlerini alır, iletileri paketler ve ağ üzerinden uçtan uca teslim etmek için paketleri adresler. IPv4, 32 bit adres kullanır.\n\n-   **IPv6**\nIPv4'e benzerdir ancak 128-bit adres kullanır.\n\n-   **NAT - Network Address Translation**\nÖzel bir ağdaki IPv4 adreslerini, genel olarak benzersiz genel IPv4 adreslerine çevirir.\n\n**Messagign - Mesajlaşma**\n\n-   **ICMPv4**\nPaket dağıtımındaki hatalar hakkında bir hedef hosttan kaynak hosta geri bildirim sağlar.\n\n-   **ICMPv6**\nICMPv4 ile benzer işlevsellik sağlar, ancak IPv6 paketleri için kullanılır.\n\n-   **ICMPv6 ND**\nAdres çözümlemesi ve yinelenen adres algılaması için kullanılan dört protokol iletisini içerir.\n\n**Routing Protocols - Yönlendirme Protokolleri**\n\n-   **OSPF - Open Shortest Path First**\nOSPF açık standart bir iç yönlendirme protokolüdür.\n\n-   **EIGRP - Interior Gateway Routing Protocol**\nBant genişliği, gecikme, yük ve güvenilirliğe dayalı kompozit metrik kullanan, Cisco tescilli bir yönlendirme protokolüdür.\n\n-   **BGP - Border Gateway Protocol**\nInternet Servis Sağlayıcıları (ISS) arasında kullanılan açık standart dış ağ geçidi yönlendirme protokolüdür. BGP aynı zamanda ISS'ler ile büyük özel müşterileri arasında yönlendirme bilgileri alışverişinde bulunmak için yaygın olarak kullanılmaktadır.\n\n### Network Access Layer - Ağ Erişim Katmanı\n    \n**Adress Resolution - Adres Çözümleme**\n    \n- **ARP**\nAdres Çözümleme Protokolü. IPv4 adresi ile donanım adresi arasında dinamik adres eşlemesi sağlar.\n    \n**Data Link Prtocols - Veri Bağlantısı Protokolleri**\n    \n- **Ethernet**\n Ağ erişim katmanının kablolama ve sinyalizasyon standartlarını tanımlar.\n \n- **WLAN - Wireless Local Area Network**\n2,4 GHz ve 5 GHz radyo frekanslarında kablosuz sinyal verme kurallarını tanımlar.\n\nHangi katmanda hangi protokol var öğrendik şimdi sıra bu katmanlar ne işe yarıyor ona bakalım. Ama o da bir başka makalenin konusu olsun. :)",
    "slug": "internet-protokol-ve-modelleri",
    "cover": "internet-protokol.png",
    "date": "2022-06-09 19:00",
    "createdAt": 1654792441731,
    "updatedAt": 1654900199480
  },
  {
    "title": "OSI Referans Modeli",
    "description": "Daha önceki makalemde anlattığım üzere protokoller bilgisayarların iletişimi için olmazsa olmazdır. Şimdi OSI Referans Modelini daha detaylı şekilde inceleyelim.",
    "categories": [
      "network"
    ],
    "slug": "osi-referans-modeli",
    "tags": [
      "osi"
    ],
    "ID": "fc5ebf74-0a07-4426-90f6-efd2ef75d9ac",
    "content": "Bir önceki makalede TCP/IP protokol paketini anlatmıştım şimdi sıra OSI Referans Modelinde.\n\nOSI'den önce firmalar kendilerine özel ağ sistemleri geliştirip bunları bir paket halinde müşteriye sunuyorlardı. Fakat bu çok pahalıydı ve dışarıya kapalı bir sistem oluşturmaktaydı. Aslında kendi içlerinde çok sağlıklı çalışabilmelerine karşın kendi dışındaki ağlarla iletişim kurmaları çok zor ya da imkânsızdı. Örneğin IBM işletim sistemleri, IBM network aygıtları kullanarak kendi aralarında iletişim kurabiliyorlardı.\n\nAğ sistemlerinde arzın talebi karşılayamaması ve ağ piyasasında donanım üreticilerinin baskısı sonucunda, ağ sistemlerinin işlevleri için standart bir modelin oluşturulması gerektiği anlaşıldı. Bu nedenle ISO (International Organization for Standardization) tarafından 1978 yılında bilgisayar ağları standardı olan OSI referans modeli ortaya konmuştur. İlk olarak 1978 yılında ortaya çıkarılan bu standart 1984 yılında yeniden düzenlenerek OSI (Open System Interconnection) referans modeli olarak yayınlanmıştır. Model yaygın olarak kabul görmüş ve network işlemi için bir kılavuz olmuştur. OSI Modeli sadece bir standarttır. Eskiden olduğu gibi isteyen kendi başına bir ağ iletişim modeli geliştirebilir. Ancak OSI modeli referans alınmadıysa diğer ağlarla iletişimi zor olacak değişik üreticiler bu ağ sistemi için donanım ve yazılım üretemeyecekler demektir. OSI referans modeli bilgisayar ağlarında iletişim ortamından (kablolu, kablosuz) kullanıcıya kadar olan işlemleri 7 katmana ayırmıştır.\n\nBu katmanlar sırasıyla;\n1.  Physical (Fiziksel Katman)\n2.  Data Link (Veri Bağlantı Katmanı)\n3.  Network (Ağ Katmanı)\n4.  Transport (Taşıma Katmanı)\n5.  Session (Oturum Katmanı)\n6.  Presentation (Sunu Katmanı)\n7.  Application (Uygulama Katmanı)\n\n![osi-reference-model](https://skorskyfiles.blob.core.windows.net/$web/articles/osi-referans-modeli/osi-referans_1.jpg)\n\nOSI modeline göre veri uç cihazdan çıkarak her bir katmana uğrar ve fiziksel kablo aracılığı ile aynı katmanlardan yeniden geçerek server-host cihaza ulaşır.\n\nŞimdi bu katmanlara biraz göz atalım. \n\n## 1-Physical layer (Fiziksel Katman)\n\nBilgisayar için her şey 1 ve 0'dır. Gönderilecek veri de 1 ve 0 lar olarak iletilir. Alıcı tarafta okunan sinyaller 1 ve 0 a dönüştürülürken; gönderici taraf 1 ve 0'ları elektrik sinyallerine çevirip kabloya yerleştirir.\n\nGönderim işleminden önce ortamın özelliklerine karar verilmelidir ki işte bu işlemi gerçekleştiren katman fiziksel katmandır. Kablolu bağlantı için kablo türü, kablosuz bağlantı için iletim kanalı seçimi vb. kararlar bu katmanda verilir. Bitler, elektrik, radyo sinyalleri, ışık gibi pek çok yolla gönderilebilir. İletimin gerçekleşmesi açısından önemli unsur ise taşıma ortamıdır. Taşıma ortamı hem alıcı hem gönderici için aynı olmalıdır. Elektriksel yolla iletilen veri radyo sinyalleri olarak alınırsa iletim düzgün şekilde gerçekleşemez. Taşıma ortamı iletim için tek unsur, tek şart değildir. Voltaj değeri veri iletim hızı gibi değerlerin de uygun şekilde tanımlanması gerekir.\n\n> RS232, ATM, FDDI, gibi protokoller bu katmanda çalışır.\n\n> Repeater cihazları, hub, kablolar, ethernet bu katman üzerinde çalışır\n\n## 2-Data Link layer (Veri Bağlantı Katmanı)\n\n-   Veri bağlantı katmanı fiziksel katmana erişmek ve kullanmak ile ilgili kuralları belirler.\n-   Bu katmanda Ethernet ya da Token Ring olarak bilinen erişim yöntemleri çalışır ve bu erişim yöntemleri, verileri kendi protokollerine uygun olarak işleyerek iletebilirler.\n-   Veriler ağ katmanından fiziksel katmana gönderilir. Bu aşamada veriler belli parçalara bölünür bu parçalarada frame diyoruz. Frame yani türkçesi ile çerçeve verilerin belli bir kontrol içinde göndermeyi sağlayan paketlerdir.\n-   Veri bağlantı katmanının büyük bir bölümü network kartı içinde gerçekleşir.\n-   Veri bağlantı katmanı ağ üzerindeki diğer bilgisayarları tanımlama, kablonun o anda kimin tarafından kullanıldığının tespiti ve fiziksel katmandan gelen verinin hatalara karşı kontrolü görevini yerine getirir.\n-   Veri bağlantısı katmanı iki alt bölüme ayrılır:\n\nMedia Access Control (MAC) and Logical Link Control (LLC)\n\nMAC alt katmanı veriyi hata kontrol kodu(CRC), alıcı ve gönderenin MAC adresleri ile beraber paketler ve fiziksel katmana aktarır. Alıcı tarafta da bu işlemleri tersine yapıp veriyi veri bağlantısı içindeki ikinci alt katman olan LLC’ye aktarmak görevi yine MAC alt katmanına aittir. LLC alt katmanı bir üst katman olan ağ katmanı için geçiş görevi görür. Protokole özel mantıksal portlar oluşturur (Service Access Points, SAPs gibi). Böylece kaynak makinada ve hedef makinada aynı protokoller iletişime geçebilir (örneğin TCP/IP←>TCP/IP). LLC ayrıca veri paketlerinden bozuk gidenlerin tekrar gönderilmesinden sorumludur. Flow Control yani alıcının işleyebileğinden fazla veri paketi gönderilerek boğulmasının engellenmesi de LLC’nin görevidir.\n\nAyrıca switch  2.katmanda çalışan bir cihazdır. Çünkü 2. katmanda tanımlı MAC adreslerini algılayabilirler ve bir porttan gelen veri paketini (yine elektrik sinyalleri halinde) sadece gerekli olan porta yönlendirirler. \n\n## 3-Network Layer (Ağ Katmanı)\n\nAğ katmanı veri paketine farklı bir ağa gönderilmesi gerektiğinde yönlendiricilerin yani routerların kullanacağı bilginin eklendiği katmandır. Bu katmanda veriler paket olarak taşınır.\n\n-   Bu katman sayesinde veri router aracılığıyla yönlendirmesi sağlanır.\n-   Switching and routing teknolojisi bu katmanda çalışır.\n-   Veri paketini hedefe yönlendirilmesi ve iletilmesini sağlar.\n-   Internetworking, error handling (hata işleme), congestion control ve packet sequencing (paket sıralama) bu katmanda çalışır.\n>  TCP/IP, IPX, AppleTalk gibi farklı ağ protokolleri bu katmanda çalışır.\n\n## 4-Transport Layer (Taşıma Katmanı)\n\nTaşıma katmanı üst katmanlardan gelen veriyi ağ paketi boyutunda parçalara böler.\n\n-   Taşıma katmanı alt katmanlar (Transport Set) ve üst katmanlar (Application Set) arasında geçit görevini üstlenir.\n-   Bu katmanda veriler segment halinde taşınır.\n-   Üst katmanlara taşıma servisi sağlamasınını yanında ayrıca ağın servis kalitesini (Quality pf Service) artırır.\n-   Alt ve üst katmanların eş zamanlı ve stabil çalışabilmesini sağlar bu işleme _**multiplexing**_ denir\n- En önemli görevi verinin uçtan uca iletimini ve zamanında ulaşıp ulaşmadığının kontrolünü sağlar\n> TCP, UDP gibi protokoller bu katmadan çalışır.\n# 5-**Session Layer (Oturum Katmanı)**\n\nOturum katmanı bir bilgisayar birden fazla bilgisayarla aynı anda iletişim içinde olduğunda, genelde böyle olur, oturum bilgilerini tutar ve doğru bilgisayar ile iletişim kurmamızı sağlar. Sunum katmanına yollanacak veriler farklı oturumlarla birbirinden ayrılarak yapılır.\n\nÖrneğin A bilgisayarı B üzerideki yazıcıya yazdırıken, C bilgisayarı B üzerindeki diske erişiyorsa, B hem A ile olan, hem de C ile olan iletişimini aynı anda sürdürmek zorundadır.\n\n-   Oturum ve bağlantı koordinasyonu ile ilgilenir.\n-   Uygulamalar arasındaki bağlantıların kurulması, yönetimi ve sonlandırılmasından sorumludur.\n-   NetBIOS ve Sockets gibi protokoller farklı bilgisayarlarla aynı anda olan bağlantıları yönetme imkanı sağlarlar.\n-   İletişimde problem olması halinde verinin baştan gönderilmemesi için veriye checkpoint’ler ekler. Aksaklık halinde ne kadarı gönderilmediği tespit edilerek sadece o kısım gönderilir.\n## 6-Presentation Layer (Sunum Katmanı)\n\nBu katmanın en önemli görevi gönderilecek olan verinin diğer bilgisayara anlaşılacak şekilde çevrilmesidir.\n\n-   Sizin ekranınıza gelecek olan veriden sorumludur.\n-   Datayı Encryption and decryption edilmesi bu katmadan gerçekleşir.\n>  GIF, JPEG, TIFF, EBCDIC, ASCII vb. bu katmanda çalışır.\n\nBu katmanın görevi çoğunlukla network ile ilgili değildir. Bu katmanı aslen aynı dosya türünü okuyabilen programlar kullanmaktır.\n\n## 7-Application Layer (Uygulama Katmanı)\n\nUygulama katmanı, kullanıcıya en yakın olan katmandır. Bizler bu katmanda çeşitli programları kullanarak (Chrome, Firefox, Skype vb.) bu katman içerisinde veri oluşturabiliyoruz. \n\n-   Son kullanıcı ile uygulamalar arasındaki süreçleri destekler diyebiliriz.\n-   Dosya aktarımları, mail ve diğer network yazılımı hizmetleri için uygulama hizmetinden sorumludur.\n- Kullanıcın Google.com’u çağırdığını Presentation Layer’e bildirir.(Diğer katmanlarla tek ilişkisi budur)\n>  FTP, HTTP, Telnet gibi protokoller burada çalışır.\n\n## Özetle OSI\n\nOSI kavramsal bir modeldir ne OSI yazılımı nede OSI donanımı diye birşey göremeyiz. Ancak yazılım ve donanım üreticileri bu modelin tanımlandığı kurallar çevresinde üretim yaparlar ve bu sayede ürünler birbiri ile uyumlu hale gelir.\n\n## OSI ve TCP/IP Modellerini Karşılaştıralım\n\nTCP / IP protokol paketini oluşturan protokoller OSI referans modeli açısından da açıklanabilir. OSI modelinde, TCP / IP modelinin ağ erişim katmanı ve uygulama katmanı, bu katmanlarda meydana gelmesi gereken ayrı işlevleri açıklamak için ayrıca bölünmüştür.\n\nAğ erişim katmanında, TCP / IP protokol paketi, fiziksel bir ortam üzerinden iletim yaparken hangi protokollerin kullanılacağını belirlemez; sadece internet katmanından fiziksel ağ protokollerine geçişi açıklar. OSI 1 ve 2 Katmanları medyaya erişim için gereken yordamları ve ağ üzerinden veri göndermek için fiziksel yolları ele alır.\n\nTemel benzerlikler taşıma ve ağ katmanlarıdır. Ancak bu iki model, katmanların üstündeki ve altındaki katmanlarla ilişki kurma şeklinde farklılık gösterir.\n\n- OSI 'nin 3.Katmanı olan ağ katmanı, doğrudan TCP/IP'nin internet katmanıyla eşleşir. Bu katman, mesajları bir ağ üzerinden yönlendiren protokolleri tanımlamak için kullanılır.\n- OSI'nin 4.Katmanı olan taşıma katmanı, doğrudan TCP/IP'nin taşıma katmanıyla eşleşir. Bu katman, kaynak ve hedef hostlar arasında sıralı ve güvenilir veri iletimi sağlayan genel hizmetleri ve işlevleri tanımlar.\n- TCP / IP uygulama katmanı, çeşitli son kullanıcı uygulamalarına özel işlevsellik sağlayan çeşitli protokoller içerir. OSI modelinin 5, 6 ve 7. Katmanları, ağ üzerinde çalışan uygulamalar üretmek için uygulama yazılımı geliştiricileri ve satıcıları için referans olarak kullanılır.\n- TCP/IP ve OSI modelleri, çeşitli katmanlardaki protokollere atıfta bulunulduğunda yaygın olarak kullanılır. OSI modeli, veri bağlantısı katmanını fiziksel katmandan ayırdığından, bu alt katmanlara atıfta bulunurken yaygın olarak kullanılır.\n\n\n\n",
    "cover": "osi-model.png",
    "date": "2022-06-10 12:00",
    "createdAt": 1654814286182,
    "updatedAt": 1654901323304
  },
  {
    "ID": "5094ab95-478f-4baa-845e-88a1112c34bd",
    "description": "OSI referans modelini ve TCP/IP protokol modelini öğrendik ama bunları bilmek, bir ağ üzerinden hareket eden verilerin nasıl kapsüllendiğini öğrendiğinizde kullanışlı olacaktır. Bu makaledeki amacımız verilerin ağ içindeki serüvenine ortak olmak. ",
    "categories": [
      "network"
    ],
    "title": "Ağ İçinde Veri İletimi",
    "slug": "ag-icinde-veri-iletimi",
    "tags": [
      "pdu",
      "data-transmission"
    ],
    "content": "OSI referans modelini ve TCP/IP protokol modelini öğrendik ama bunları bilmek, bir ağ üzerinden hareket eden verilerin nasıl kapsüllendiğini öğrendiğinizde kullanışlı olacaktır. Bu makaledeki amacımız verilerin ağ içindeki serüvenine ortak olmak. \n\n## Verileri Segmentleme\n\nTeorik olarak, bir video veya bir çok büyük eki olan bir e-posta mesajı gibi tek bir iletişim, bir ağ üzerinden bir kaynaktan bir hedefe devasa, kesintisiz bir bit akışı olarak gönderilebilir. Ancak bu durum, aynı iletişim kanallarını veya bağlantılarını kullanması gereken diğer aygıtlar için sorun yaratacaktır. Bu büyük veri akışları önemli gecikmelere neden olacaktı. Ayrıca, birbirine bağlı ağ altyapısında herhangi bir bağlantı iletim sırasında başarısız olursa, mesajın tamamı kaybolur ve tam olarak yeniden iletilmesi gerekir.\n\nDaha iyi bir yaklaşım, veriyi ağ üzerinden göndermek için daha küçük ve daha yönetilebilir parçalara bölmektir(böl ve fethet gibi).  Segmentasyon, bir veri akışını ağ üzerinden iletimler için daha küçük birimlere bölme işlemidir. Veri ağları TCP/IP protokol paketini kullandığından, verileri tek tek IP paketlerine gönderir ve bu nedenle segmentasyon gereklidir. Her paket, ayrı ayrı kartpostal dizisi olarak uzun bir mektup göndermeye benzer şekilde ayrı ayrı gönderilir. Aynı hedef için segmentleri içeren paketler, farklı yollar üzerinden gönderilebilir.\n\nİletilerin bölümlenerek gönderilmesinin iki temel faydası vardır:\n\n-   **Hızı artırır**  - Büyük bir veri akışı paketlere ayrıldığından, bir iletişim linki olmadan ağ üzerinden büyük miktarda veri gönderilebilir. Bu, ağda multiplexing adı verilen birçok farklı konuşmanın araya girmesini sağlar.\n-   **Verimliliği artırır**  - Ağdaki bir başarısızlık veya ağ tıkanıklığı nedeniyle tek bir segment hedefine ulaşamazsa, tüm veri akışını yeniden göndermek yerine yalnızca o segmentin yeniden iletilmesi gerekir.\n![segmentation-multiplexing](https://skorskyfiles.blob.core.windows.net/$web/articles/veri-iletimi/Segmenting-Messages.gif)\n\n## Sequencing - Sıralama\nMesajları bir ağ üzerinden iletmek için segmentasyon ve multiplexing kullanmanın zorluğu, tüm veri iletme sürecine eklenen karmaşıklık düzeyidir. 100 sayfalık bir mektup göndermeniz gerektiğini, ancak her zarfın yalnızca bir sayfa alabileceğini düşünün, 100 zarf gerekli olacaktır ve her zarfın ayrı ayrı ele alınması gerekecektir. 100 farklı zarf içindeki 100 sayfalık mektubun okunamayacak olması mümkündür. Sonuç olarak, zarftaki bilgilerin alıcının sayfaları doğru sırayla yeniden bir araya getirebilmesini sağlamak için bir sıra numarası içermesi gerekir.\n\nAğ iletişiminde, mesajın her bir bölümünün doğru hedefe ulaşmasını ve şekilde gösterildiği gibi orijinal mesajın içeriğine yeniden birleştirilmesini sağlamak için benzer bir süreçten geçmesi gerekir. TCP, tek tek segmentleri sıralamaktan sorumludur.\n![sequencing](https://skorskyfiles.blob.core.windows.net/$web/articles/veri-iletimi/sequencing.png)\n\n## Protocol Data Unit\nUygulama verileri, ağ ortamından iletilmek üzere protokol yığınından geçirildikçe, her düzeyde çeşitli protokol bilgileri eklenir. Bu işlem, kapsülleme (encapsulation) olarak bilinir.\n\n> UDP PDU, datagram olarak adlandırılsa da, IP paketleri de bazen IP datagramları olarak adlandırılır .\n\nVeri parçasının herhangi bir katmanda aldığı biçim, protocol data unit (PDU) olarak adlandırılır. Kapsülleme sırasında, birbirini takip eden her katman, kullanılan protokole göre yukarıdaki katmandan aldığı PDU'yu kapsüller. PDU, işlemin her aşamasında yeni işlevlerini yansıtmak için farklı bir ad alır. PDU'lar için evrensel bir adlandırma kuralı olmamasına rağmen, bu derste PDU'lar TCP/IP paketinin protokollerine göre adlandırılmıştır. Her veri biçimi için PDU'lar şekilde gösterilmiştir.\n\n![pdu](https://skorskyfiles.blob.core.windows.net/$web/articles/veri-iletimi/pdu.png)\n\n- **Data** ⇒ Uygulama katmanında kullanılan PDU için genel terim.\n- **Segment** ⇒ Taşıma katmanı PDU'su\n- **Packet** ⇒ Ağ katmanı PDU'su\n- **Frame** ⇒ Veri Bağlantı katmanı PDU'su\n- **Bits** ⇒ Veriyi ortam üzerinden fiziksel olarak iletirken kullanılan fiziksel katman PDU'su\n\n\n### Encapsulation\nMesajlar bir ağda gönderildiğinde, kapsülleme işlemi yukarıdan aşağıya doğru çalışır. Her katmanda, üst katman bilgisi, kapsüllenmiş protokol içindeki veriler olarak kabul edilir. Örneğin, TCP segmenti, IP paketinin içindeki veri olarak kabul edilir.\n![encapsulation](https://skorskyfiles.blob.core.windows.net/$web/articles/veri-iletimi/Encapsulation-Example.gif)\n\n### De-encapsulation\nBu işlem alıcı hostta tersine şekilde işler ve kapsül açma olarak bilinir. Kapsül açma alıcı cihaz tarafından bir veya daha fazla protokol başlığını kaldırmak için kullanılan işlemdir. Veri son kullanıcı uygulamasına doğru yığından yukarı hareket ederken kapsülleri açılır.\n![deencapsulation](https://skorskyfiles.blob.core.windows.net/$web/articles/veri-iletimi/De-encapsulation-Example.gif)\n\nVeri iletimine de göz atmış olduğumuza göre bir sonraki makalemizde artık katmanları daha derin bir şekilde inceleyebiliriz...\n\n",
    "cover": "data-transmission.png",
    "date": "2022-06-11 12:00",
    "createdAt": 1654903589661,
    "updatedAt": 1654904529641
  },
  {
    "slug": "network-e-ilk-adım",
    "tags": [
      "topology",
      "lan-wan"
    ],
    "content": "Çoook uzun sürecek bir makale serisine başlıyoruz. CCNA-1 eğitimine paralel gidecek olan makale serimiz siber güvenlik ve network security çalışmak isteyenlere ilk adım için mükemmer bir fırsat olacağına eminim. O zaman başlayalım\n\n## Network Bileşenleri\nBir ağa bağlanan ve ağ iletişimine katılan tüm bilgisayarlar, ana bilgisayarlar (host) olarak adlandırılırlar. Host'lar uç cihazlar olarak adlandırılabilir. Bazı hostlar da istemciler olarak adlandırılır. Bununla birlikte, host terimi özellikle ağ üzerinde iletişim amacıyla bir numara atanan cihazları ifade eder. Bu numara, belirli bir ağdaki hostu tanımlar. Bu numaraya Internet Protokolü (IP) adresi denir. IP adresi, hostu ve bu hostun bağlı olduğu ağı tanımlar.\n\nSunucular, ağdaki diğer uç aygıtlara e-posta veya web sayfaları gibi bilgiler sunmalarını sağlayan yazılımlara sahip bilgisayarlardır. Her hizmet ayrı sunucu yazılımı gerektirir. Örneğin, bir sunucunun ağa web hizmetleri sunabilmesi için, web sunucu yazılımı gereklidir. Sunucu yazılımına sahip bir bilgisayar birçok farklı istemciye aynı anda hizmet sağlayabilir.\n\n![host-and-server](https://skorskyfiles.blob.core.windows.net/$web/articles/gunumuzde-network/host-andserver.png)\n\n### End Devices - Uç Cihazlar\nSon kullanıcıların en çok tanık olduğu cihazlardır. Kullandığımız tüm bilgisayarlar istisnalar hariç birer uç cihaz olarak adlandırılır. Bir uç cihazı diğerinden ayırmak için ağdaki her uç cihazın bir adresi vardır. Uç cihaz iletişim başlattığında, mesajın nereye gönderileceğini belirtmek için hedef uç cihazın adresini kullanır.\n\nBir uç cihaz, ağ üzerinden iletilen bir mesajın kaynağı veya hedefidir. \n### Intermediary Devices - Aracı Cihazlar\n\nAracı cihazlar, bağımsız uç cihazları ağa bağlar. Bir Internetwork oluşturmak için birden fazla ağa bağlanabilirler. Bu aracı cihazlar, bağlanabilirliği sağlar ve verilerin ağ üzerinden akmasını sağlar.\n\nAracı cihazlar mesajların ağ boyunca alacağı yolu belirlemek için ağ bağlantıları hakkındaki bilgilerle birlikte hedef uç cihazın adresini kullanır.\n![araci-cihazlar](https://skorskyfiles.blob.core.windows.net/$web/articles/gunumuzde-network/araci-cihazlar.png)\nAracı ağ aygıtları bu işlevlerin bir kısmını veya tümünü gerçekleştirir:\n\n-   İletişim sinyallerini yeniden üretme ve yeniden iletme\n-   Ağ boyunca ve ağlar arasında hangi yolların bulunduğu hakkında bilgileri sağlama\n-   Hata ve iletişim arızalarını diğer cihazlara bildirime\n-   Bağlantı arızası gerçekleştiğinde veriyi alternatif yollar üzerinden yönlendirme\n-   Mesajların önceliklerine göre, mesajları sınıflandırma ve yönlendirme\n-   Güvenlik ayarlarına göre veri akışını engelleme veya izin verme\n### Network Media\nİletişim medya aracılığıyla bir ağ üzerinden iletilir. Medya, mesajın kaynaktan hedefe geçtiği kanalı sağlar.\n\nModern ağlar cihazları birbirine bağlamak için öncelikle üç tür medya kullanır:\n\n-   **Kablolardaki metal teller** ⇒ Veriler elektriksel impulslara kodlanır.\n-   **Kablolardaki cam veya plastik lifler (fiber optik kablo)** ⇒Veriler ışık darbelerine kodlanır.\n-   **Kablosuz iletim** ⇒ Veriler, elektromanyetik dalgaların spesifik frekanslarının modülasyonu yoluyla kodlanır.\n![network-media\n](https://skorskyfiles.blob.core.windows.net/$web/articles/gunumuzde-network/network-media.png)\n\n## Network Topolojileri\nNetwork bileşenlerini öğrendiğimize göre artık network topolojilerine bir adım atabiliriz ancak çoook daha detaylı ayrı bir makaleye hakeden bir konu olduğu için sadece göz atacağız. Bir network kuracağımız zaman bunu tıpkı bir kağıda diyagram ya da şekil çizer gibi göstermek işimizi çok kolaylaştıracaktır. Burada asıl amaç hangi cihaz hangi cihaza bağlı, nerede ve nasıl bağlı olduğunun cevabını verebilmektir. \n\n### Network Gösterimi\nBir topoloji çizeceğiz fakat hangi şekilleri kullanarak? Gelin bunun cevabına birlikte bakalım.\n![network-gösterimi](https://skorskyfiles.blob.core.windows.net/$web/articles/gunumuzde-network/agin-g%C3%B6sterimi.png)\n\nYukarıda her bir bileşeni gösterirken yaygın olarak gösterilen çizimleri verilmiştir. Tabii arada her ne kadar benzer olsa da farklılıklar meydana gelebilir.\n### Topoloji Diyagramları\n\nTopoloji diyagramları, bir ağ ile çalışan herkes için zorunlu belgelerdir. Ağın nasıl bağlandığına dair görsel bir harita sunarlar. Fiziksel ve mantıksal olmak üzere iki tür topoloji diyagramı vardır.\n**Fizksel Topoloji Diyagramları**\nFiziksel topoloji diyagramları, aracı cihazların fiziksel konumunu ve kablo kurulumunu gösterir. Bu cihazların bulunduğu odaların bu fiziksel topolojide etiketlendiğini görebilirsiniz.\n![fiziksel-topoloji](https://skorskyfiles.blob.core.windows.net/$web/articles/gunumuzde-network/fiziksel-topoloji.png)\n**Mantıksal Topoloji Diyagramları**\nMantıksal topoloji diyagramları, cihazları, portları ve ağın adresleme şemasını göstermektedir. Hangi uç cihazların hangi aracı cihazlara bağlandığını ve hangi medyanın kullanıldığını görebilirsiniz.\n![mantiksal-topoloji](https://skorskyfiles.blob.core.windows.net/$web/articles/gunumuzde-network/mantiksal-topoloji.png)\n## Network Türleri\n\nArtık ağları oluşturan bileşenlere ve bunların fiziksel ve mantıksal topolojilerdeki gösterimlerine aşina olduğumuza göre birçok farklı ağ türüne geçebiliriz.\n\nNetwork türleri aşağıdakilere göre büyük ölçüde değişiklik gösterir:\n\n-   Kapsanan alanın boyutu\n-   Bağlı kullanıcı sayısı\n-   Mevcut hizmetlerin sayısı ve türleri\n-   Sorumluluk alanı\n\nEn yaygın iki ağ altyapısı türü Local Area Network (LAN) ve Wide Area Network (WAN'lar) 'dir. LAN, küçük bir coğrafi bölgedeki kullanıcılara ve son cihazlara erişim sağlayan bir ağ altyapısıdır. LAN genellikle bir işletme, ev veya küçük işletme ağı içindeki bir departmanda kullanılır. WAN, genellikle daha büyük bir şirket veya telekomünikasyon servis sağlayıcısı tarafından sahip olunan ve yönetilen geniş bir coğrafi alanda diğer ağlara erişim sağlayan bir ağ altyapısıdır. \n\n### LAN ve WAN\n\n**LAN'lar**\n\nLAN, küçük bir coğrafi alana yayılan bir ağ altyapısıdır. LAN'ların belirli özellikleri vardır:\n-   LAN'lar ev, okul, ofis binası veya kampüs gibi sınırlı bir alandaki uç cihazları birbirine bağlar.\n-   LAN genellikle tek bir kuruluş veya birey tarafından yönetilir. Yönetimsel kontrol, ağ düzeyinde uygulanır, güvenlik ve erişim kontrol politikalarını yönetir.\n-   LAN'lar şekilde gösterildiği gibi dahili uç cihazlara ve ara cihazlara yüksek hızlı bant genişliği sağlar.\n\n**WAN'lar**\n\nWAN, geniş bir coğrafi alana yayılan bir ağ altyapısıdır. WAN'lar genel olarak servis sağlayıcıları (SS) veya İnternet Servis Sağlayıcıları (İSS) tarafından yönetilir.\n\nWAN'lar belirli özelliklere sahiptir:\n\n-   WAN'lar LAN'ları şehirler, eyaletler, bölgeler, ülkeler veya kıtalar arası gibi geniş coğrafi alanlarda birbirine bağlar.\n-   WAN'lar genellikle çoklu servis sağlayıcıları tarafından yönetilir.\n-   WAN'lar genel olarak LAN'lar arasında daha düşük hızlı bağlantılar sunar.\n![lan-wan](https://skorskyfiles.blob.core.windows.net/$web/articles/gunumuzde-network/lan-wan.png)\n###  İnternet\nİnternet, birbirine bağlı ağların dünya çapında bir koleksiyonudur (internetworks veya kısaca internet). \n![internet](https://skorskyfiles.blob.core.windows.net/$web/articles/gunumuzde-network/internet.png)\nİnternet herhangi bir şahıs veya gruba ait değildir. Bu, çeşitli altyapı boyunca etkili iletişim sağlamak, tutarlı ve yaygın olarak tanınan teknolojilerin ve standartların uygulanmasının yanı sıra birçok ağ yönetimi kurumunun işbirliğini gerektirir. İnternet protokollerinin ve süreçlerinin yapısını ve standardizasyonunu sürdürmeye yardımcı olmak için geliştirilmiş kuruluşlar vardır. Bu kuruluşlar arasında İnternet Mühendisliği Görev Gücü (IETF), Atanmış İsimler ve Sayılar için İnternet Şirketi (ICANN) ve İnternet Mimarisi Kurulu (IAB) ve diğer birçok kuruluş yer almaktadır.\n### İntranet ve Extranet\nİnternet terimine benzer iki terim daha vardır: Intranet ve Extranet\n\nIntranet, genellikle bir kuruluşa ait LAN ve WAN'ların özel bir bağlantısına atıfta bulunmak için kullanılan bir terimdir. Bir intranet, yalnızca kuruluşun üyeleri, çalışanları veya yetkilendirilmiş diğer kişiler tarafından erişilebilir olacak şekilde tasarlanmıştır. Örnek olarak bir üniversitede olduğunuzu düşünün farklı kampüslerde olsanız bile aynı network içerisinden çıkarak Internet'e çıkarsınız. Üniversite ağı Intranet örneğidir.\n\nBir kuruluş, farklı bir kuruluş için çalışan ancak kuruluşun verilerine erişmesi gereken kişilere güvenli erişim sağlamak için bir extranet kullanabilir. Extranetlerin bazı örnekleri şunlardır :\n\n-   Dış tedarikçilere ve yüklenicilere erişim sağlayan bir şirket\n-   Hastalarına randevu alabilmeleri için doktorlara rezervasyon sistemi sağlayan bir hastane\n-   İlçesindeki okullara bütçe ve personel bilgisi sağlayan yerel bir eğitim ofisi\n![intranet-extranet](https://skorskyfiles.blob.core.windows.net/$web/articles/gunumuzde-network/intranet.png)",
    "categories": [
      "network"
    ],
    "description": "network'e ilk adım",
    "title": "Network'e İlk Adım",
    "ID": "d66535f8-4397-4e74-b221-2c2f9189b885",
    "cover": "network.png",
    "date": "2022-06-07 12:00",
    "createdAt": 1654939008965,
    "updatedAt": 1654939810942
  },
  {
    "categories": [
      "network"
    ],
    "title": "Data Link Katmanı",
    "tags": [
      "osi",
      "data-link-layer"
    ],
    "slug": "data-link-katmani",
    "description": "data link katmanını inceliyoruz.",
    "content": "\n## Data Link Katmanının Amacı\nOSI modeline göre Data Link Layer (2. katman) ağ verilerini fiziksel ağ için hazırlar. data link katmanı, ağ arayüz kartından (NIC) ağ arayüz kartına iletişiminden sorumludur. data linkkatmanı aşağıdakileri yapar:\n\n-   Üst katmanların medyaya erişmesini sağlar . Üst katman protokolleri cihazların hangi fiziksel bağlantı yoluyla bağlandığını bilmez, bu nedenle bağlantı medyasına göre hareket eden katman data link katmanıdır.\n-   Verilere  genellikle 3.Katman paketlerini (örn. IPv4 veya IPv6) ekler ve bunları 2.Katman frame'lerine kapsüller.\n-   Verilerin medyaya nasıl yerleştirildiğini ve alındığını kontrol eder.\n-   Ağ medyası üzerinden, uç noktalar arasında frame'leri değiş tokuş eder.\n-   Kapsüllenmiş verileri içerisine genellikle 3.Katman paketlerini alır ve bunları uygun olan üst katman protokolüne yönlendirir.\n-   Hata algılaması gerçekleştirir ve bozuk frame'leri reddeder.\n- Kısaca gelen verileri fiziksel katman için hazırlar. Giden verileri ise üst katmanlar için hazırlar.\n\nBilgisayar ağlarında düğüm, bir iletişim yolu boyunca veri alabilen, oluşturabilen, depolayabilen veya iletebilen bir aygıttır. Düğüm, dizüstü bilgisayar veya cep telefonu gibi bir uç aygıtı veya Ethernet switchi gibi bir aracı aygıt olabilir.\n\nData link katmanı olmadan, IP gibi ağ katmanı protokolleri, bir teslimat yolu boyunca var olabilecek her tür medyaya bağlanmak için hazırlık yapmak zorundadır. Ayrıca, her yeni bir ağ teknolojisi veya medyası geliştirildiğinde, IP'nin buna uyum sağlaması gerekir.\n\nAşağıdaki şekilde 3. katman olan ağ katmanından gelen veri paketine 2. katman başlığını(Ethernet hedefi ve kaynak NIC bilgisi) eklemesini görmekteyiz. Bu işlemden sonra fiziksel katman tarafından desteklenen bir biçime dönüştürerek fiziksel katmana iletir.\n\n![data-link-layer](https://skorskyfiles.blob.core.windows.net/$web/articles/data-link-layer/data-link.png)\n\n## EEE 802 LAN/MAN Data Link Alt Katmanları\n\nIEEE 802 LAN/MAN standartları Ethernet LAN'larına, kablosuz LAN'lara (WLAN), kablosuz kişisel alan ağlarına (WPAN) ve diğer yerel ve metropol alan ağlarına özgüdür. IEEE 802 LAN/MAN data link katmanı aşağıdaki iki alt katmandan oluşur:\n\n-   **Mantıksal Bağlantı Kontrolü (LLC)** \n Bu IEEE 802.2 alt katmanı üst katmanlardaki ağ yazılımı ile alt katmanlardaki aygıt donanımı arasında iletişim kurar. Frame için hangi ağ katmanı protokolünün kullanıldığını tanımlayan bilgileri frame'e yerleştirir. Bu bilgiler, IPv4 ve IPv6 gibi birden çok 3. Katman protokolünün aynı ağ arayüzünü ve medyasını kullanmasını sağlar.\n \n-   **Media Access Controller Address (MAC)** \n Bu katman bizim mac adresi diye bildiğimiz alt katmandır ve donanıma uygulanır. Encapsulation' dan sorumludur. Data link katmanı için adresleme sağlar ve bazı fiziksel katman teknolojileri ile birlikte hareket eder.\n\nMAC alt katmanı encapsulation işlemini şu şekilde yapar:\n\n-   **Frame sınırlama**  ⇒ Bir frame içindeki alanları tanımlamak için önemli sınırlayıcılar sağlar. Bu sınırlayıcı bitler, verici ve alıcı düğümler arasında senkronizasyon sağlar.\n-   **Adresleme**  ⇒ 2.Katman frame'inin aynı paylaşılan medyadaki aygıtlar arasında taşınması için kaynak ve hedef adresleme sağlar.\n-   **Hata algılama**  ⇒ İletim hatalarını algılamak için kullanılan bir artbilgi içerir.\n\nMAC alt katmanı, birden fazla cihazın paylaşılan (yarı çift yönlü) bir medya üzerinden iletişim kurmasına izin vererek medya erişim kontrolü de sağlar. Tam çift yönlü iletişim erişim kontrolü gerektirmez.\n\n## Frame\nData link katmanı, kapsüllenmiş verileri (genellikle bir IPv4 veya IPv6 paketi), başlık ve artbilgiyle birlikte frame oluşturacak şekilde kapsülleyerek, yerel medya üzerinden aktarım için hazırlar.\n\ndata link protokolü, aynı ağ içindeki NIC-NIC iletişimlerinden sorumludur.data link katmanı frame'lerini tanımlayan birçok farklı data link katmanı protokolü bulunmasına rağmen, her frame türü üç temel parçaya sahiptir:\n\n-   Başlık\n-   Veri\n-   Artbilgi\n\nDiğer kapsülleme protokollerinden farklı olarak, data link katmanı frame'inin sonuna artbilgi şeklinde bir bilgi ekler.\n## Frame Alanları\nEncapsulation, kontrol bilgilerini başlık ve artbilgiye farklı alanlardaki değerler olarak yerleştirerek kesintisiz yayını çözülebilir gruplara ayırır. Bu format, fiziksel sinyallere düğümler tarafından tanınan ve hedefte paketler halinde kodu çözülen bir yapı verir.\n\nGenel frame alanları şekilde gösterilmiştir. Tüm protokoller bu alanların tümünü içermez. Belirli bir data link protokolüne yönelik standartlar gerçek frame biçimini belirler.\n![frame-alanlari](https://skorskyfiles.blob.core.windows.net/$web/articles/data-link-layer/frame-alanlari.png)\n\n-   **Frame start and stop indicator flags**  ⇒ Frame'in başlangıç ve bitiş sınırlarını tanımlamak için kullanılır.\n-   **Addressing** ⇒ Medyadaki kaynak ve hedef düğümleri gösterir.\n-   **Type**  ⇒ Veri alanındaki 3.Katman protokolünü tanımlar.\n-   **Control**  ⇒ Hizmet kalitesi gibi (QoS) özel akış kontrolü hizmetlerini tanımlar. QoS, belirli ileti türlerine iletme önceliği verir. Örneğin, IP üzerinden ses (VoIP) çerçevleri normalde egecikmeye duyarlı oldukları için öncelik alır.\n-   **Data**  ⇒ Frame yükünü (yani paket başlığı, segment başlığı ve veri) içerir.\n-   **Error Detection**  ⇒ Artbilgi oluşturmak için verilerden sonra dahil edilir.\n\n### Özetle\n\nData link katmanı protokolleri her frame'in sonuna artbilgi ekler. Hata algılama adı verilen işlemde artbilgi, frame'in hatasız olup olmadığını belirler. Frame'i oluşturan bitlerin mantıksal veya matematiksel bir özetinin Frame'e yerleştirilmesiyle gerçekleştirilir. Medyadaki sinyaller temsil ettikleri bit değerlerini önemli ölçüde değiştirecek parazit, bozulma ve kayıplara maruz kalabileceği için, data link katmanı hata algılamayı ekler.\n\nİletimde bir düğüm, döngüsel yedekleme kontrolü (CRC) değeri olarak bilinen frame içeriğinin mantıksal özetini oluşturur. Bu değer, frame içeriğini temsil etmek için frame kontrol sırası (FCS) alanına yerleştirilir. Ethernet artbilgisinde, FCS, frame'in iletim hatalarıyla karşılaşıp karşılaşmadığını belirlemek için alıcı düğüm için bir yöntem sağlar.\n\n## 2. Katman Adresleri\nData link katmanı, bir frame'i paylaşılan bir yerel medyaya taşımak için kullanılan adreslemeyi sağlar. Bu katmandaki cihaz adresleri fiziksel adres olarak anılır. Data link katmanı adreslemesi frame başlığında bulunur ve yerel ağdaki frame hedef düğümünü belirtir. Genellikle frame'in başlangıcıdır, bu nedenle NIC, frame'in geri kalanını kabul etmeden önce kendi 2.Katman adresiyle eşleşip eşleşmediğini hızlıca belirleyebilir. Frame başlığı frame'in kaynak adresini de içerebilir.\n\nFiziksel adresler, hiyerarşik olan 3.Katman mantıksal adreslerinden farklı olarak cihazın hangi ağda bulunduğunu göstermez. Aksine, fiziksel adres belirli cihaza özeldir. Bir aygıt, başka bir ağa veya alt ağa taşınsa bile, aynı 2.Katman fiziksel adresiyle çalışmaya devam eder. Bu nedenle, 2.Katman adresleri yalnızca aynı paylaşılan medya içindeki aygıtları aynı IP ağına bağlamak için kullanılır.\n\nIP paketi hosttan routera, routerdan routera ve son olarak routerdan hosta geçerken, IP paketinin yeni bir data link frame'inde kapsüllenir. Her data link frame'i, o frame'i gönderen NIC'nin kaynak data link adresini ve frame'i alan NIC'nin hedef data link adresini içerir.\n\n- **Host - Router**\nKaynak host 3.Katman IP paketini 2.Katman frame'inde kapsüller. Frame başlığında, host 2.Katman adresini kaynak olarak ve R1 için 2.Katman adresini hedef olarak ekler.\n![host-router](https://skorskyfiles.blob.core.windows.net/$web/articles/data-link-layer/host-router.png)\n- **Router- Router**\nR1, 3.Katman IP paketini yeni bir 2.Katman çerçevesinde kapsüller. Çerçeve başlığında R1, 2.Katman adresini kaynak olarak ve R2 için 2.Katman adresini hedef olarak ekler.\n![router-router](https://skorskyfiles.blob.core.windows.net/$web/articles/data-link-layer/router-router.png)\n-  **Router- Host**\nR2, 3.Katman IP paketini yeni bir 2.Katman çerçevesinde kapsüller. Çerçeve başlığında R2, 2.Katman adresini kaynak olarak ve sunucu için 2.Katman adresini hedef olarak ekler.\n![router-host](https://skorskyfiles.blob.core.windows.net/$web/articles/data-link-layer/router-host.png)\n\nVeri bağlantısı katmanı adresi yalnızca LAN içinde geçerlidir. Bu katmandaki adreslerin LAN dışında bir anlamı yoktur. Verilerin başka bir ağ segmentine geçmesi gerekiyorsa, router gibi bir aracı gerekir. Router, fiziksel adrese göre frame'i kabul etmeli ve IP adresi olan hiyerarşik adresi incelemek için frame kapsülünü açmalıdır. IP adresini kullanarak router, hedef cihazın ağ konumunu ve bu adrese ulaşmak için en iyi yolu belirleyebilir. Paketin nereye iletileceğini bildiğinde, router paket için yeni bir frame oluşturur ve yeni frame son hedefine doğru bir sonraki ağ segmentine gönderilir.\n\nArtık Data link katmanı hakkında çok daha fazla bilgi edindik. Network katmanına geçmek için sonraki makalelerde geçebiliriz ama önce network topolojilerini daha detaylı inceleyeceğiz. Bir sonraki makalede görüşmek üzere....",
    "ID": "0fc4ee6c-0c02-4817-870c-3c571bd9652c",
    "cover": "Data-Link-Layer.jpg",
    "date": "2022-06-12 12:00",
    "createdAt": 1654983046596,
    "updatedAt": 1654983415568
  }
]