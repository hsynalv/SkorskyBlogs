[
  {
    "tags": [
      "cisco",
      "first-step-to-switch"
    ],
    "description": "Cisco switch cihazlarına yapılandırmaya başlamak için switch ve IOS'u tanıyalım.",
    "title": "Cisco Switch'e ilk Adım",
    "content": "Tüm ağ cihazlarının her birinde birer işletim sistemi olmak zorundadır. Cisco Switch cihazlarında ise IOS işletim sistemi vardır. (Apple IOS ile karıştırmayın :-))\n\nBu makalemizde ise bu temel kullanım için bu IOS işletim sistemini nasıl configüre edebiliriz onu anlatacağım.\n\nÖncelikle Cisco Swicth cihazlarında herhangi bir GUI yok bu nedenle çoğu kişinin sevmediği ama biz network ve siber güvenlik ile uğraşan kişilerin sevdiği ve çokça aşina olduğu CLI ekranını kullanacağız \n\n## IOS CLI'a İlk Adımlar\n\nCisco IOS yazılımı bir güvenlik özelliği olarak, yönetim erişimini aşağıdaki gibi iki komut moduna ayırır:\n\n<span style=\"color:green\">User EXEC Mode (Kullanıcı EXEC Modu)</span>\n\n- Bu mod sadece kısıtlı sayıda temel monitoring (izleme) komutlarına izin verir.\n- Genellikle <em>yalnızca görüntüleme modu</em veya <em>enable mode</em> olarak adlandırılır.\n- Cihaz yapılandırmasına herhangi bir değişiklik yapılmasına izil verilmez.\n- CLI'da <code>SwitchAdı></code> ile gösterilir. \n\n\n<span style=\"color:green\">Privileged EXEC Mode (Ayrıcalıklı Exec Modu)</span>\n\n- Bu modda iken kullanıcı herhangi bir izleme komutunu kullanabilir, cihaza ait yapılandırma ve yönetim komutlarını yürütebilir.\n- Global Config modu gibi daha yüksek yapılandırma modlarına sadece bu moddan giriş yapılabilir.\n- CLI'da <code>SwitchAdı#</code> ile gösterilir. \n\n## Global Yapılandırma Modu ve Alt Yapılandırma Modları\n\nCisco switchlerini yapılandırmak için kullanıcının global yapılandırma modu olarak adlandırılan, global config moduna girmesi gerekir.\n\nGlobal yapılandırma modunda, cihazın bir bütün olarak çalışmasını etkileyen CLI yapılandırma değişiklikleri yapılır. Global yapılandırma modu, <code>Switch(config)#</code> gibi cihaz adından sonra biten bir <em>(config)#</em> istemiyle tanımlanır.\n\nGlobal Config moduna, diğer belirli yapılandırma modlarından önce erişilir. Kullanıcı global Config modundan farklı alt yapılandırma modlarına girebilir. Bu modların her biri, switchin belirli bir bölümünün veya işlevinin yapılandırılması için kullanılır. Alt yapılandırma modlarına iki örnek aşağıdaki gibidir.\n\n- **Line Config Mode** ⇒ Konsol, SSH, Telnet veya AUX erişimini yapılandırmak için kullanılır.\n- **Interface Config Mode** ⇒ Switch portunu veya Router ağ arayüzünü yapılandırmak için kullanılır.\n\nCLI kullanırken hangi modda olduğumuzu o moda ait komut istemi aracılığı ile öğreniriz. Varsayılan olarak her komut istemi cihazın adı ile başlar, daha sonra ise hangi modda olduğunu belirten ifade yer alır. Örneğin;\n\n- Global Config Mode ⇒ <code>SwitchAdı(config)#</code>\n- Line Config Mode ⇒ <code>SwitchAdı(config-line)#</code>\n- Interface Config Mode ⇒ <code>SwitchAdı(config-if)#</code>\n\n## Switch Modları Arasında Gezinelim\n\nSwicth modlarına girip çıkmak için özel komutlar kullanılır. User EXEC modundan Privileged EXEC moduna geçmek için <code>enable</code>komutu kullanılır. Kullanıcı EXEC moduna geri dönmek için ise Privileged EXEC modundayken <code>disable</code> komutunu kullanılır.\n\nGlobal Config moduna girmek için Privileged EXEC modundayken <code>configure terminal</code> modunu kullanılır. Global Config moddan Privileged EXEC moduna geri dönmek için ie <code>exit</code> komutu kullanılır.\n\nBirçok farklı alt yapılandırma modu vardır. Örneğin, Line Config moduna girmek için <code>line</code> komutu ve ardından erişmek istediğiniz yönetim line türünü ve numarasını kullanılır. Alt yapılandırma modundan çıkmak ve global yapılandırma moduna dönmek için exit komutu kullanılır.\n\n```\nSwitch(config)# line console 0\nSwitch(config-line)# exit\nSwitch(config)#\n```\n\nHerhangi bir alt yapılandırma modundan, modlar hiyerarşisine göre bi üst moda geçmek için <code>exit</code> komutu dışında <code>end</code> komutu ve Ctrl+Z tuş kombinasyonu kullanılabilir.\n\nAyrıca bir alt yapılandırma modundan diğerine doğrudan da geçebiliriz. Bir arayüzü seçtikten sonra komut isteminin değiştiğine dikkat edelim\n\n```\nSwitch(config-line)# interface FastEthernet 0/1\nSwitch(config-if)#\n```\n\n### Swicth modlarını daha hızlı değiştirelim\n\nSürekli configüre terminal gibi uzun mod değiştirme komutlarını kullanmak bazen can sıkıcı olabilir. Aşağıda sık kullanılan mod değiştirme komutlarının kısaltılmış verisyonlarını görebilirsiniz.\n|Komut|Kısa hali\n|-|-|\n|enable|en|\n|configure terminal|conf t|\n|interface FastEthernet 0/1| int fa0/1|\n|...|...|\nİlerleyen makalelerde daha fazla komut göreceğiz merak etmeyin :)\n\n\n",
    "categories": [
      "network"
    ],
    "slug": "cisco-switch-e-ilk-adım",
    "ID": "1c86164b-7c68-4f8c-a9ab-c95ce427086b",
    "cover": "cover2.jpg",
    "date": "2022-06-08 12:00",
    "createdAt": 1654719373157,
    "updatedAt": 1654728512525
  },
  {
    "tags": [
      "cisco",
      "switch",
      "switch-config"
    ],
    "description": "Temel switch yapılandırmalarını yapalım.",
    "title": "Temel Switch Yapılandırması",
    "content": "## Switch Adını Değiştirelim\n\nBir switch yapılandırmaya başlarken ilk işimiz switch adını değiştirmek olmalıdır. Varsayılan olarak Cisco tarafından cihazlara <em>Switch</em> adı atanır. Sorun da tam olarak burada başlar. Bir ağda isim atanmamış tüm switchlerin adı aynı olduğunda uzaktan SSH ya da Telnet ile bağlanılan switchin hangi switch olduğunu anlamak karmaşık hale gelebilir.\n\nVarsayılan isim, daha açıklayıcı bir isimle değiştirilmelidir. İsimler akıllıca seçildiğinde, ağ cihazlarını hatırlamak, belgelemek ve tanımlamak daha kolay olacaktır. Hostlar için bazı önemli isimlendirme yönergeleri şunlardır:\n\n- Harf ile başlamalı\n- Boşluk içermemeli\n- Harf veya sayı ile bitmeli\n- Sadece harf, sayı ve tireler kullanılmalı\n- Uzunluğu 64 karakterden az olmalı\n\nAşağıda örnek bir switch adlandırması görmekteyiz. \n\n![örnek-switch-adlandırması](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/8bca2c1e-e069-4769-8f4c-9c513df32825/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20220608%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20220608T211755Z&X-Amz-Expires=86400&X-Amz-Signature=ae65ec7eb13e839b68921c2d02bc01810d9085d3deb45d78d8e8a93ad17e65ce&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22&x-id=GetObject)\n\nİsimlendirmeler bu şekilde tanımlayıcı olduğu takdirde ilerleyen aşamalarda işimiz çok daha kolay hale gelecektir.\n\nBir switchin adını değiştirmek için global config modda iken <code>hostname</code> komutunun ardından verilmek istenen ismin girilmesi yeterlidir.\n\n```\nSwitch# configure terminal\nSwitch(config)# hostname Sw-Floor-1\nSw-Floor-1(config)#\n```\n\n## Switch Modlarını Şifreleyelim\nBir cihaza ilk defa bağlandığımızda User EXEC modundayız demektir. Örnekte gösterildiği gibi <code>line console 0</code> komutunu kullanarak konsol yapılandırma moduna geçiş yapıyoruz. 0 olarak bahsettiğimiz ilk ve genelde tek olan cihaz üzerindeki konsol girişini ifade eder. \n\nBu moda girdikten sonra <code>password</code> komutunu kullandıktan sonra vermek istediğimiz şifreyi girebiliriz. Son olarak <code>login</code> komutunu kullanarak User Exec modunu aktifleştirmemiz gerekiyor.\n\n```\nSw-Floor-1# configure terminal\nSw-Floor-1(config)# line console 0\nSw-Floor-1(config-line)# password skorskyblog\nSw-Floor-1(config-line)# login\nSw-Floor-1(config-line)# end\nSw-Floor-1#\n```\n\nArtık cihaz üzerinde bulunan konsol hattını şifreledik ancak cihaz üzerinde daha fazla yetkiye sahip olduğumuz Privileged modu da şifrelememiz güvenlik açısından elzem bir durumdur. Şimdi sıra privileged modda;\n\nPrivileged moda geçtikten sonra <code>enable secret</code> komutunun ardından istediğimiz şifreyi girebiliriz. \n```\nSw-Floor-1# configure terminal\nSw-Floor-1(config)# enable secret skorsky\nSw-Floor-1(config)# exit\nSw-Floor-1#\n```\n\nHenüz işimiz bitmedi şimdi sıra Cisco Switchlerde bulunan SSH ve Telnet gibi uzaktan bağlantı yapmamıza olanak sunan sanal vty hatlarını şirelemekte. Çoğu Cisco cihazında 0-15 aralığında numaralandırılmış 16 adet sanal vty hattı yer alır.\n\nBu sanal hatları şifrelemek için global config modda iken <code>line vty 0 15</code> komutunu kullanarak vty config moda geçiş yapıyoruz. Daha sonra <code>password</code> komutunun ardından istediğimiz şifreyi verebiliriz. Hemen ardından <code>login</code>\nkomutunu kullanarak vty erişimini etkinleştiriyoruz.\n\n```\nSw-Floor-1# configure terminal\nSw-Floor-1(config)# line vty 0 15\nSw-Floor-1(config-line)# password skorsky-line\nSw-Floor-1(config-line)# login \nSw-Floor-1(config-line)# end\nSw-Floor-1#\n```\n\nBuraya kadar her şey çok güzel ancak cihaz üzerinde çalışan yapılandırma dosyasında varsayılan olarak verilen parolalar açık olarak yer almaktadır bu da üst düzey bir güvenlik açığı yaratmaktadır. Aşağıda encrypte edilmemiş yapılandırma dosyasını görmektesiniz. \n![şifresiz config](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/5cb85708-594f-480e-b6f8-7c4854476218/capture_20220609011538057.bmp?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20220608%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20220608T221616Z&X-Amz-Expires=86400&X-Amz-Signature=8cea65ba62d4a9a22415a954effbae7b13885ee52be28b118259b3874c9c0c8f&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22capture_20220609011538057.bmp%22&x-id=GetObject)\n\nGörüldüğü üzere girilen tüm parolalar açıkça görülebilir halde şimdi bu parolaları encrypte edelim.\n\nGlobal config moda girdikten sonra <code>service password-encryption</code> komutunu girdiğimiz zaman cihazda yer alan parolalar artık encrypte edilmiş hale gelir.\n\n```\nSw-Floor-1# configure terminal\nSw-Floor-1(config)# service password-encryption\nSw-Floor-1(config)#\n```\n\nCihazda çalışan yapılandırmayı görmek için <code>show running-config</code> ya da daha kısa hali olan <code>sh run</code> komutunu girdikten sonra enter tuşu ile biraz alt satırlara indiğimizde aşağıdaki gibi bir ekran ile karşılaşacağız. \n```\nSw-Floor-1(config)# end\nSw-Floor-1# show running-config\n```\n![encrypte password](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/d530255c-10cd-49e6-9371-1612dce60dd0/capture_20220609012157159.bmp?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20220608%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20220608T222232Z&X-Amz-Expires=86400&X-Amz-Signature=fae55173382260d8be969f313c2d0413e9c7f0d13b040feea6ed73d9450815f7&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22capture_20220609012157159.bmp%22&x-id=GetObject)\n\nArtık şifrelerde encrypte olmuş halde. Durmak yok ilerlemeye devam. \n\n## Banner Mesajları Gösterelim\n![banner](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/2cc48ce8-6fed-4517-867b-d905c7a9af8a/capture_20220609013000109.bmp?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20220608%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20220608T223112Z&X-Amz-Expires=86400&X-Amz-Signature=93f04bea494ea860d2ca6e0042d63b4126b95b5f487baa9be09a60d091187ea5&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22capture_20220609013000109.bmp%22&x-id=GetObject)\n\nCisco cihazına ilk eriştiğimizde yukarıdaki gibi bir banner mesajı verseydik güzel olmaz mıydı? Evet ben de aynı şekilde düşündüm. Hadi bir banner mesajı verelim.\n\nÖncelikle global config moda geçtikten sonra <code>banner motd</code> komutundan sonra banner mesajı içerisinde yer almayacak özel bir karakteri ayraç olarak kullanarak mesajımızı giriyoruz. Daha anlaşılır olması için örnek verelim.\n```\nSw-Floor-1# configure terminal\nSw-Floor-1(config)# banner motd !Authorized Access Only!\n```\n\n## Yapılandırmayı Kaydedelim\nSwitch üzerinde çeşitli değişiklikler yaptık çok güzel, fakat elektrik bağlantısı kesilirse ya da switch kapatılıp açılırsa ayarlar olduğu gibi korunacak mı? Hayır... Düzenlediğimiz ayarların geçici değil sürekli olmasını sağlamak için yapılandırma dosyasını Switch üzerinde bulunun NV-Ram'e kaydetmek gerekir. Hadi gelin bunu yapalım. \n\nPrivileged moda geçtikten sonra <code>copy running-config startup-config</code> komutunu kullanırız. Burada geçen iki argümanı açıklamak gerekirse;\n\n- running-config ⇒ Rastgele Erişimli Bellekte (RAM) saklanır. Geçerli yapılandırmayı yansıtır. Çalışan bir yapılandırma değiştirildiğinde Cisco cihazının çalışması derhal etkilenir. RAM uçucu hafızadır. Cihaz kapatıldığında veya yeniden başlatıldığında tüm içeriğini kaybeder. \n- startup-config . ⇒  NVRAM'de depolanan kaydedilmiş yapılandırma dosyasıdır. Cihazın açılışta veya yeniden başlatma sırasında kullanacağı tüm komutları içerir. Flash, cihaz kapatıldığında içeriğini kaybetmez.\n\n```\nSw-Floor-1# show running-config\n```\nSon olarak başlangıç yapılandırmasına istenmeyen değişikler kaydedildiyse yine privileged moda geçerek <code>erase startup-config</code> komutunu kullanarak NV-Ram'de yer alan yapılandırma dosyasını silebiliriz. Cihaz yeniden başladığında varsayılan yapılandırma dosyası ile birlikte tekrar açılacaktır. \n\nSonraki makalelerde görüşmek üzere hoşçakalın...\n",
    "categories": [
      "network"
    ],
    "slug": "temel-switch-yapilandirmasi",
    "ID": "6849cc65-360b-46ca-afa0-006f3ee0dd81",
    "cover": "cover1.jpg",
    "date": "2022-06-09 12:00",
    "createdAt": 1654728343247,
    "updatedAt": 1654782908905
  },
  {
    "tags": [
      "osi",
      "tcp/ip",
      "protocol"
    ],
    "ID": "4bfd6bc2-9bf5-458f-a384-5789e098f6db",
    "description": "Herkese merhabalar, bugün uzun soluklu bir seriye başlıyoruz. Ethernet prokolleri ve protokol paketleri nelerdir bunlara bakacağız. ",
    "title": "İnternet Protokol ve Modelleri",
    "categories": [
      "network"
    ],
    "content": "\nHerkese merhabalar, bugün uzun soluklu bir seriye başlıyoruz. İnternet protokolleri ve protokol paketleri nelerdir bunlara bakacağız. \n\n## Ağ Protokollerine Genel Bakış\nTıpkı insanların iletişiminde olduğu gibi bilgisayarlarda kendilerine özgü bir dil kullanır. Bizdeki dilin bilgisayarlardaki karşılığı protokol olarak adlandırılır ve her uç cihaz birbiriyle iletişim kurarken bu protokollere uymak zorundadır. \n\nAğ protokolleri, cihazlar arasında mesaj alışverişi için ortak bir biçim ve kurallar kümesi tanımlar. Protokoller, yazılım, donanım veya her ikisinde de uç cihazlar ve aracı cihazlar tarafından uygulanır. Her ağ protokolünün kendi işlevi, biçimi ve iletişim kuralları vardır.\n\nTabloda ağ üzerinde iletişim kurmak için gerekli protokoller listelenmiştir. Hadi onlara bakalım. \n\n|Protokol Türü|Açıklama  |\n|--|--|\n| Ağ İletişim Protokolleri | Ağ iletişim protkolleri, iki veya daha fazla cihazın bir veya daha fazla ağ üzerinden iletişim kurmasını sağlar. Ethernet teknolojileri ailesi IP, TCP, HTTP ve daha pek çok protokol içerir. |\n|Ağ Güvenlik Protokolleri|Ağ güvenlik protokolleri, kimlik doğrulama, veri bütünlüğü ve veri şifreleme sağlamak için verileri korur. Güvenli protokol örnekleri arasında SSH, SSL ve TLS bulunur.|\n|Yönlendirme Protokolleri|Yönlendirme protokolleri, yönlendiricilerin rota bilgilerini değiştirmesini, yol bilgilerini karşılaştırmasını ve ardından hedef ağa giden en iyi yolu seçmesini sağlar. seçmesini sağlar. Yönlendirme protokollerine örnek olarak Open Shortest Path First (OSPF) ve Border Gateway Protocol (BGP) verilebilir.|\n|Hizmet Bulma Protokolleri|Hizmet bulma protokolleri, cihazların veya hizmetlerin otomatik olarak algılanması için kullanılır. Hizmet bulma protokollerine örnek olarak IP adresi tahsisi için hizmetleri keşfeden DHCP ve isimden IP adresine çeviri gerçekleştirmek için kullanılan DNS verilebilir.|\n\n## Protokol Paketlerinin Gelişimi\nProtokol paketi, kapsamlı ağ iletişim hizmetleri sağlamak için birlikte çalışan bir dizi protokoldür. 1970'lerden bu yana, bazıları standart bir kuruluş tarafından geliştirilmiş, bazıları ise çeşitli satıcılar tarafından geliştirilmiş olan birkaç farklı protokol paketi bulunmaktadır.\n\nGünümüzde en çok bilinen iki protokol modeli OSI Referans Modeli ve TCP/IP Protokol Paketidir. \n\n## OSI Referans Modeli\n\nOSI modeli (Open System Interconnection) yedi katmandaki protokolleri uygulamak için bir bilgisayar ağ çerçevesi tanımlar. Ağ oluşturma terimlerindeki bir protokol, bir tür müzakere ve iki ağ kuruluşu arasında kuraldır. OSI modelini ISO International Organization for Standardization geliştirmiştir. Amaç aslında iki bilgisayar arasındaki iletişimin nasıl olacağını tanımlamaktan başka bir şey değildir.\n\nOSI öncesindeki dönemde, yalnızca bilgisayar donanımı üreten kuruluşlara özgü ağlar vardı. Bu ağların özellikleri, çoğunlukla yalnızca o üreticinin donanımının bağlanmasına izin verecek biçimde tanımlanmıştı. Onlardan ayrı olarak OSI, çeşitli üreticilerin ürünlerinin bağlanabileceği bir ağ için, bir sektör etkinliği olarak ortaya çıkmıştır. OSI Modeli herhangi bir donanım ya da bilgisayar ağı tipine göre değişiklik göstermemektedir. OSI’nin amacı ağ mimarilerinin ve protokollerinin bir ağ ürünü bileşeni gibi kullanılmasını sağlamaktır. OSI modeli 7 katmana ayrılmıştır.\nBu katmanları bir sonraki makalemizde daha ayrıntılı anlatacağım. \n\n## TCP/IP Protokol Paketi\nTCP ve IP birleşerek TCP/IP protokol ailesini oluşturmaktadır. Bu sayede bilgisayarlar arasında birden fazla iletişim metodu kullanılabilmektedir. Bu iletişim sırasında kullanılan TCP/IP katmanları ise aşağıdaki gibi belirtilmiştir.\n\n1. Katman – Application layer - Uygulama katmanı\n2. Katman – Transport layer -Taşıma katmanı\n3. Katman – Internet layer - İnternet katmanı\n4. Katman – Network layer - Ağ katmanı\n\nGünümüzde, TCP/IP protokol paketi birçok protokol içerir ve yeni hizmetleri desteklemek için gelişmeye devam eder. Daha popüler olanlardan bazıları şekilde gösterilmiştir.\n![tcp-ıp-protokol-paketi](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/70b7e71d-cdfd-44f8-a924-a1f0ddd5b0be/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20220609%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20220609T150718Z&X-Amz-Expires=86400&X-Amz-Signature=1e3bfefc2f1ebeb97d02d279aac85e14e75e5abc243ee082b36acd5aaf31ac02&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22&x-id=GetObject)\n\nYukarıda bahsedilen protokolleri her katman için biraz daha detaylı inceleyelim.\n\n###   Application Layer - Uygulama Katmanı\n\n**Name System**\n\n- **DNS - Domain Name System** \nskorskyblog.me gibi alan adlarını IP adreslerine çevirir.\n\n**Host Config - Host Yapılandırma**\n\n- **DHCPv4 - Dynamic Host Configuration Protocol v4** \n IPv4 için DHCPv4 sunucusu, başlangıçta DHCPv4 istemcilerine IPv4 adresleme bilgilerini dinamik olarak atar ve artık ihtiyaç duyulmadığında adreslerin yeniden kullanılmasına izin verir.\n \n-  **DHCPv6 - Dynamic Host Configuration Protocol V6** \nIPv6 için DHCPv6, DHCPv4'e benzer. DHCPv6 sunucusu, başlangıçta DHCPv6 istemcilerine IPv6 adresleme bilgilerini dinamik olarak atar.\n\n-   **SLAAC - StateLess Address Auto Configuration**  \nBir aygıtın DHCPv6 sunucusu kullanmadan IPv6 adresleme bilgilerini almasını sağlayan bir yöntem.\n\n**E-mail**\n\n-   **SMTP - Simple Mail Transfer Protocol**\nİstemcilerin bir posta sunucusuna ve sunucuların diğer sunuculara e-posta göndermesini sağlar.\n \n-   **POP3 - Post Office Protocol 3**\nİstemcilerin bir posta sunucusundan e-posta almasını ve e-postayı istemcinin yerel posta uygulamasına indirmesini sağlar.\n\n-   **IMAP - Internet Message Access Protocol**\nİstemcilerin, bir posta sunucusunda depolanan e-postalara erişebilmesinin yanı sıra sunucuda e-postaların korumasını da sağlar.\n\n**File Transfer - Dosya Transferi**\n\n-   **FTP - File Transfer Protocol** \nBir hosttaki kullanıcının başka bir hosttaki dosyalara ağ üzerinden erişmesini veya aktarmasını sağlayan kuralları belirler. FTP güvenilirdir, bağlantı odaklı ve onaylı bir dosya dağıtım protokolüdür.\n\n-   **SFTP - Secure File Transfer Protocol**\nSecure Shell (SSH) protokolünün bir uzantısı olarak SFTP, dosya aktarımının şifrelendiği güvenli bir dosya aktarım oturumu oluşturmak için kullanılabilir. SSH, genellikle bir cihazın komut satırına erişmek için kullanılan güvenli uzaktan oturum açma yöntemidir.\n\n-   **TFTP - Trivial File Transfer Protocol**\nEn iyi çaba gerektiren, onaylı olmayan dosya teslimi ile basit, bağlantısız bir dosya aktarım protokolü. FTP'den daha az ek yük kullanır.\n\n**Web and Web Service**\n\n-   **HTTP - Hyper-Text Transfer Protocol**\nWorld Wide Web'de metin, grafik görüntü, ses, video ve diğer multimedya dosyalarını alıp vermesini sağlayan bir dizi kurallar bütünüdür.\n\n-   **HTTPS** - World Wide Web üzerinden değiştirilen verileri şifreleyen güvenli bir HTTP formudur.\n\n-   **REST - Representational State Transfer**\nWeb uygulamaları oluşturmak için uygulama programlama arayüzlerini (API'ler) ve HTTP isteklerini kullanan bir web hizmetidir.\n\n###   Transport Layer - Taşıma Katmanı\n\n**Connection Oriented - Bağlantı Odaklı**\n\n- **TCP - Transmission Control Protocol**\nAyrı ana bilgisayarlarda çalışan süreçler arasında güvenilir iletişimi sağlar ve başarılı teslimatı doğrulayan güvenilir ve onaylı iletimler sağlar.\n\n**Connectionless - Bağlantısız**\n\n- **UDP - User Datagram Protocol**\nBir hostta çalışan bir işlemin, başka bir hostta çalışan bir işleme paket göndermesini sağlar. Ancak, UDP başarılı iletimini doğrulamaz.\n\n###   Internet Layer - İnternet Katmanı\n \n**Internet Protocol - Internet Protokolü**\n\n-   **IPv4**\nTaşıma katmanından ileti kesimlerini alır, iletileri paketler ve ağ üzerinden uçtan uca teslim etmek için paketleri adresler. IPv4, 32 bit adres kullanır.\n\n-   **IPv6**\nIPv4'e benzerdir ancak 128-bit adres kullanır.\n\n-   **NAT - Network Address Translation**\nÖzel bir ağdaki IPv4 adreslerini, genel olarak benzersiz genel IPv4 adreslerine çevirir.\n\n**Messagign - Mesajlaşma**\n\n-   **ICMPv4**\nPaket dağıtımındaki hatalar hakkında bir hedef hosttan kaynak hosta geri bildirim sağlar.\n\n-   **ICMPv6**\nICMPv4 ile benzer işlevsellik sağlar, ancak IPv6 paketleri için kullanılır.\n\n-   **ICMPv6 ND**\nAdres çözümlemesi ve yinelenen adres algılaması için kullanılan dört protokol iletisini içerir.\n\n**Routing Protocols - Yönlendirme Protokolleri**\n\n-   **OSPF - Open Shortest Path First**\nOSPF açık standart bir iç yönlendirme protokolüdür.\n\n-   **EIGRP - Interior Gateway Routing Protocol**\nBant genişliği, gecikme, yük ve güvenilirliğe dayalı kompozit metrik kullanan, Cisco tescilli bir yönlendirme protokolüdür.\n\n-   **BGP - Border Gateway Protocol**\nInternet Servis Sağlayıcıları (ISS) arasında kullanılan açık standart dış ağ geçidi yönlendirme protokolüdür. BGP aynı zamanda ISS'ler ile büyük özel müşterileri arasında yönlendirme bilgileri alışverişinde bulunmak için yaygın olarak kullanılmaktadır.\n\n### Network Access Layer - Ağ Erişim Katmanı\n    \n**Adress Resolution - Adres Çözümleme**\n    \n- **ARP**\nAdres Çözümleme Protokolü. IPv4 adresi ile donanım adresi arasında dinamik adres eşlemesi sağlar.\n    \n**Data Link Prtocols - Veri Bağlantısı Protokolleri**\n    \n- **Ethernet**\n Ağ erişim katmanının kablolama ve sinyalizasyon standartlarını tanımlar.\n \n- **WLAN - Wireless Local Area Network**\n2,4 GHz ve 5 GHz radyo frekanslarında kablosuz sinyal verme kurallarını tanımlar.\n\nHangi katmanda hangi protokol var öğrendik şimdi sıra bu katmanlar ne işe yarıyor ona bakalım. Ama o da bir başka makalenin konusu olsun. :)",
    "slug": "internet-protokol-ve-modelleri",
    "cover": "internet-protokol.png",
    "date": "2022-06-09 19:00",
    "createdAt": 1654792441731,
    "updatedAt": 1654798113054
  }
]